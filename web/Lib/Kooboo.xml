<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kooboo</name>
    </assembly>
    <members>
        <member name="T:Kooboo.ApplicationInitialization">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.ApplicationInitialization.RegisterInitializerMethod(System.Action,System.Int32)">
            <summary>
            Registers the initializer method.
            </summary>
            <param name="method">The method.</param>
            <param name="priority">The priority.</param>
        </member>
        <member name="M:Kooboo.ApplicationInitialization.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="T:Kooboo.Caching.CacheProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kooboo.Caching.CacheProvider.Cache">
            <summary>
            Gets or sets the cache.
            </summary>
            <value>
            The cache.
            </value>
        </member>
        <member name="P:Kooboo.Caching.CacheProvider.RepositoryCache">
            <summary>
            Gets the repository cache.
            </summary>
            <value>
            The repository cache.
            </value>
        </member>
        <member name="P:Kooboo.Caching.CacheProvider.ServiceCache">
            <summary>
            Gets the service cache.
            </summary>
            <value>
            The service cache.
            </value>
        </member>
        <member name="T:Kooboo.Caching.DefaultCache">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Caching.ICache">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Caching.ICache.Add(System.String,System.Object,System.TimeSpan,Kooboo.Caching.CacheRemovedCallback)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Kooboo.Caching.ICache.Add(System.String,System.Object,System.DateTime,Kooboo.Caching.CacheRemovedCallback)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Kooboo.Caching.ICache.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Kooboo.Caching.ICache.Get(System.String)">
            <summary>
            Gets the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Caching.DefaultCache.Add(System.String,System.Object,System.TimeSpan,Kooboo.Caching.CacheRemovedCallback)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Kooboo.Caching.DefaultCache.Add(System.String,System.Object,System.DateTime,Kooboo.Caching.CacheRemovedCallback)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Kooboo.Caching.DefaultCache.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Kooboo.Caching.DefaultCache.Get(System.String)">
            <summary>
            Gets the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Caching.CacheRemovedCallback">
            <summary>
            
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Kooboo.Caching.CacheRemovedCallbackArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kooboo.Caching.CacheRemovedCallbackArgs.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Kooboo.Caching.CacheRemovedCallbackArgs.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Kooboo.Caching.RegionCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Caching.RegionCache.Add(System.String,System.Object,System.TimeSpan,Kooboo.Caching.CacheRemovedCallback)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Kooboo.Caching.RegionCache.Add(System.String,System.Object,System.DateTime,Kooboo.Caching.CacheRemovedCallback)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Kooboo.Caching.RegionCache.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Kooboo.Caching.RegionCache.Get(System.String)">
            <summary>
            Gets the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Caching.RegionCache.RegionKey(System.String)">
            <summary>
            Regions the key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Caching.RegionCache.RegionName">
            <summary>
            Gets the name of the region.
            </summary>
            <value>
            The name of the region.
            </value>
        </member>
        <member name="P:Kooboo.Caching.RegionCache.ParentCache">
            <summary>
            Gets the parent cache.
            </summary>
            <value>
            The parent cache.
            </value>
        </member>
        <member name="T:Kooboo.Collections.DictionaryExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Collections.DictionaryExtensions.ToNameValueCollection``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            To the name value collection.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dic">The dic.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Merges the specified dic.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dic">The dic.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Merges the specified source.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="source">The source.</param>
            <param name="dic1">The dic1.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Collections.DynamicDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Collections.DynamicDictionary"/> class.
            </summary>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Collections.DynamicDictionary"/> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.GetDynamicMemberNames">
            <summary>
            Returns the enumeration of all dynamic member names.
            </summary>
            <returns>
            A sequence that contains dynamic member names.
            </returns>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as getting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result" />.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Provides the implementation for operations that set member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as setting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member to which the value is being assigned. For example, for the statement sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="value">The value to set to the member. For example, for sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, the <paramref name="value" /> is "Test".</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.Add(System.String,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.TryGetValue(System.String,System.Object@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Kooboo.Collections.DynamicDictionary.Get``1(System.String)">
            <summary>
            Get the dic value by key,
            If the key is not exists, return a default value for the type.
            </summary>
            <typeparam name="TReturn">The type of the return.</typeparam>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Collections.DynamicDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Kooboo.Collections.DynamicDictionary.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="P:Kooboo.Collections.DynamicDictionary.Values">
            <summary>
            Gets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="P:Kooboo.Collections.DynamicDictionary.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Collections.DynamicDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Kooboo.Collections.EnumerableExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Collections.EnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>
            Indexes the of.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.EnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Returns the index of the first occurrence in a sequence by using the default equality comparer.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="list">A sequence in which to locate a value.</param>
            <param name="value">The object to locate in the sequence</param>
            <returns>
            The zero-based index of the first occurrence of value within the entire sequence, if found; otherwise, –1.
            </returns>
        </member>
        <member name="M:Kooboo.Collections.EnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Returns the index of the first occurrence in a sequence by using a specified IEqualityComparer.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="list">A sequence in which to locate a value.</param>
            <param name="value">The object to locate in the sequence</param>
            <param name="comparer">An equality comparer to compare values.</param>
            <returns>
            The zero-based index of the first occurrence of value within the entire sequence, if found; otherwise, –1.
            </returns>
        </member>
        <member name="M:Kooboo.Collections.EnumerableExtensions.Compare``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean},System.Action{``0,``0})">
            <summary>
            Compares the specified origianl.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="origianl">The origianl.</param>
            <param name="current">The current.</param>
            <param name="match">The match.</param>
            <param name="update">The update.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Collections.Matrix`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Kooboo.Collections.Matrix`1.Create(`0[][])">
            <summary>
            Creates the specified members.
            </summary>
            <param name="members">The members.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.Matrix`1.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.Matrix`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Kooboo.Collections.ComparedResult`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Kooboo.Collections.ComparedResult`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Collections.ComparedResult`1"/> class.
            </summary>
        </member>
        <member name="P:Kooboo.Collections.ComparedResult`1.Added">
            <summary>
            Gets or sets the added.
            </summary>
            <value>
            The added.
            </value>
        </member>
        <member name="P:Kooboo.Collections.ComparedResult`1.Deleted">
            <summary>
            Gets or sets the deleted.
            </summary>
            <value>
            The deleted.
            </value>
        </member>
        <member name="P:Kooboo.Collections.ComparedResult`1.Updated">
            <summary>
            Gets or sets the updated.
            </summary>
            <value>
            The updated.
            </value>
        </member>
        <member name="T:Kooboo.Collections.ReadonlyNameValueCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Collections.ReadonlyNameValueCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Collections.ReadonlyNameValueCollection"/> class.
            </summary>
        </member>
        <member name="M:Kooboo.Collections.ReadonlyNameValueCollection.#ctor(System.Collections.IEqualityComparer)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Collections.ReadonlyNameValueCollection"/> class.
            </summary>
            <param name="equalityComparer">The equality comparer.</param>
        </member>
        <member name="M:Kooboo.Collections.ReadonlyNameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Collections.ReadonlyNameValueCollection"/> class.
            </summary>
            <param name="col">The col.</param>
        </member>
        <member name="M:Kooboo.Collections.ReadonlyNameValueCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Collections.ReadonlyNameValueCollection"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="M:Kooboo.Collections.ReadonlyNameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Collections.ReadonlyNameValueCollection"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
            <param name="equalityComparer">The equality comparer.</param>
        </member>
        <member name="M:Kooboo.Collections.ReadonlyNameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Collections.ReadonlyNameValueCollection"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
            <param name="col">The col.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Kooboo.Collections.ReadonlyNameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Collections.ReadonlyNameValueCollection"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Kooboo.Collections.ReadonlyNameValueCollection.MakeReadOnly">
            <summary>
            Makes the read only.
            </summary>
        </member>
        <member name="M:Kooboo.Collections.ReadonlyNameValueCollection.MakeReadWrite">
            <summary>
            Makes the read write.
            </summary>
        </member>
        <member name="T:Kooboo.ComponentModel.MetadataForAttribute">
            <summary>
            Indicate reverse mapping from meta data type to data type, it's used in meta data type class.
            </summary>
        </member>
        <member name="M:Kooboo.ComponentModel.MetadataForAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.ComponentModel.MetadataForAttribute"/> class.
            </summary>
            <param name="type">The type current type describe meta data for.</param>
        </member>
        <member name="P:Kooboo.ComponentModel.MetadataForAttribute.Type">
            <summary>
            Get the type current type describe meta data for.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:Kooboo.CultureInfoHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.CultureInfoHelper.CreateCultureInfo(System.String)">
            <summary>
            Creates the culture info.
            </summary>
            <param name="cultureName">Name of the culture.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Diagnostics.LoopWatch">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Diagnostics.LoopWatch.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Kooboo.Diagnostics.LoopWatch.Wait">
            <summary>
            Waits this instance.
            </summary>
        </member>
        <member name="M:Kooboo.Diagnostics.LoopWatch.Record(System.String)">
            <summary>
            Records the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Kooboo.Diagnostics.LoopWatch.Average">
            <summary>
            Averages this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Drawing.DefaultWebPageCaptureProviderFactory">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.IWebPageCaptureProviderFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.IWebPageCaptureProviderFactory.CreateProvider">
            <summary>
            Creates the provider.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Drawing.DefaultWebPageCaptureProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.IWebPageCaptureProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.IWebPageCaptureProvider.Navigate(System.String,System.Web.HttpCookieCollection,System.EventHandler{Kooboo.Drawing.WebPageCapturedEventArgs})">
            <summary>
            Navigates the specified URL.
            </summary>
            <param name="url">The URL.</param>
            <param name="cookie">The cookie.</param>
            <param name="captured">The captured.</param>
        </member>
        <member name="M:Kooboo.Drawing.DefaultWebPageCaptureProvider.Navigate(System.String,System.Web.HttpCookieCollection,System.EventHandler{Kooboo.Drawing.WebPageCapturedEventArgs})">
            <summary>
            Navigates the specified URL.
            </summary>
            <param name="url">The URL.</param>
            <param name="cookie">The cookie.</param>
            <param name="captured">The captured.</param>
        </member>
        <member name="M:Kooboo.Drawing.DefaultWebPageCaptureProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.DefaultWebPageCaptureProvider.SetWinINETCookieString(System.String,System.String,System.String)">
            <summary>
            Sets the win INET cookie string.
            </summary>
            <param name="sURL">The s URL.</param>
            <param name="sName">Name of the s.</param>
            <param name="sData">The s data.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.DefaultWebPageCaptureProvider.SetCookies(System.Web.HttpCookieCollection,System.String)">
            <summary>
            Sets the cookies.
            </summary>
            <param name="cookies">The cookies.</param>
            <param name="url">The URL.</param>
        </member>
        <member name="T:Kooboo.Drawing.DefaultWebPageCaptureProvider.DefaultImage">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.IWebPageCaptureImage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.IWebPageCaptureImage.Save(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the specified path.
            </summary>
            <param name="path">The path.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:Kooboo.Drawing.DefaultWebPageCaptureProvider.DefaultImage.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Drawing.DefaultWebPageCaptureProvider.DefaultImage"/> class.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="M:Kooboo.Drawing.DefaultWebPageCaptureProvider.DefaultImage.Save(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the specified path.
            </summary>
            <param name="path">The path.</param>
            <param name="format">The format.</param>
        </member>
        <member name="T:Kooboo.Extensions.DictionaryExtensions">
            <summary>
            Obsolate, move to :Kooboo.Collections.DictionaryExtensions
            </summary>    
        </member>
        <member name="M:Kooboo.Extensions.DictionaryExtensions.ToNameValueCollection``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            To the name value collection.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dic">The dic.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Merges the specified dic.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dic">The dic.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Extensions.DictionaryExtensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
            <summary>
            Merges the specified source.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="source">The source.</param>
            <param name="dic1">The dic1.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Extensions.TypeExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Extensions.TypeExtensions.AssemblyQualifiedNameWithoutVersion(System.Type)">
            <summary>
            Gets the type name without version.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Extensions.TypeExtensions.GetAllChildTypes(System.Type)">
            <summary>
            Gets all child types.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Extensions.TypeExtensions.IsNumericalType(System.Type)">
            <summary>
            Determines whether [is numerical type] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if [is numerical type] [the specified type]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Extensions.TypeExtensions.GetDefaultValue(System.Type)">
            <summary>
            Gets the default value.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.FileExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.FileExtensions.Image">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.FileExtensions.Html">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.FileExtensions.Css">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.FileExtensions.ImageArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.FileExtensions.HtmlArray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.FileExtensions.CssArray">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Globalization.CurrencyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.CurrencyInfo.GetCurrencies">
            <summary>
            Gets the currencies.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.CurrencyInfo.GetCurrencyInfo(System.String)">
            <summary>
            Gets the currency info.
            </summary>
            <param name="englishName">Name of the english.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.CurrencyInfo.GetCurrencyInfoByISOSymbol(System.String)">
            <summary>
            Gets the currency info by ISO symbol.
            </summary>
            <param name="isoSymbol">The iso symbol.</param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Globalization.CurrencyInfo.EnglishName">
            <summary>
            Gets or sets the name of the english.
            </summary>
            <value>
            The name of the english.
            </value>
        </member>
        <member name="P:Kooboo.Globalization.CurrencyInfo.NativeName">
            <summary>
            Gets or sets the name of the native.
            </summary>
            <value>
            The name of the native.
            </value>
        </member>
        <member name="P:Kooboo.Globalization.CurrencyInfo.Symbol">
            <summary>
            Gets or sets the symbol.
            </summary>
            <value>
            The symbol.
            </value>
        </member>
        <member name="P:Kooboo.Globalization.CurrencyInfo.ISOSymbol">
            <summary>
            Gets or sets the ISO symbol.
            </summary>
            <value>
            The ISO symbol.
            </value>
        </member>
        <member name="T:Kooboo.Globalization.ElementRepository">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Globalization.ElementRepository.DefaultRepository">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Globalization.LocalizeHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.LocalizeHelper.GenerateResource(System.String,System.String[])">
            <summary>
            Generates the resource.
            </summary>
            <param name="dir">The dir.</param>
            <param name="patterns">The patterns.</param>
        </member>
        <member name="M:Kooboo.Globalization.LocalizeHelper.GetFiles(System.String,System.String[])">
            <summary>
            Gets the files.
            </summary>
            <param name="dir">The dir.</param>
            <param name="extensions">The extensions.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Globalization.Repository.CacheElementRepository">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Globalization.IElementRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.IElementRepository.EnabledLanguages">
            <summary>
            Enableds the languages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.IElementRepository.Elements">
            <summary>
            Elementses this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.IElementRepository.Get(System.String,System.String,System.String)">
            <summary>
            Gets the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.IElementRepository.Categories">
            <summary>
            Categorieses this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.IElementRepository.Add(Kooboo.Globalization.Element)">
            <summary>
            Adds the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.IElementRepository.Update(Kooboo.Globalization.Element)">
            <summary>
            Updates the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.IElementRepository.Remove(Kooboo.Globalization.Element)">
            <summary>
            Removes the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.IElementRepository.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.IElementRepository.AddCategory(System.String,System.String)">
            <summary>
            Adds the category.
            </summary>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
        </member>
        <member name="M:Kooboo.Globalization.IElementRepository.RemoveCategory(System.String,System.String)">
            <summary>
            Removes the category.
            </summary>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.#ctor(System.Func{Kooboo.Globalization.IElementRepository})">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Globalization.Repository.CacheElementRepository"/> class.
            </summary>
            <param name="innerRepository">The inner repository.</param>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.EnabledLanguages">
            <summary>
            Enableds the languages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.Elements">
            <summary>
            Elementses this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.Get(System.String,System.String,System.String)">
            <summary>
            Gets the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.AddCache(Kooboo.Globalization.Element)">
            <summary>
            Adds the cache.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.RemoveCache(Kooboo.Globalization.Element)">
            <summary>
            Removes the cache.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.Categories">
            <summary>
            Categorieses this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.Add(Kooboo.Globalization.Element)">
            <summary>
            Adds the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.Update(Kooboo.Globalization.Element)">
            <summary>
            Updates the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.Remove(Kooboo.Globalization.Element)">
            <summary>
            Removes the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.AddCategory(System.String,System.String)">
            <summary>
            Adds the category.
            </summary>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.RemoveCategory(System.String,System.String)">
            <summary>
            Removes the category.
            </summary>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.CacheElementRepository.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="T:Kooboo.HealthMonitoring.Log">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.HealthMonitoring.Log.Logger">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.HealthMonitoring.Log"/> class.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:Kooboo.HealthMonitoring.Log.LogException(System.Exception)">
            <summary>
            Logs the exception.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="T:Kooboo.HealthMonitoring.WebEventFieldType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.HealthMonitoring.WebEventFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.HealthMonitoring.WebBaseEventWrapper">
            <summary>
            Wrapper WebBaseEvent to expose some api.
            </summary>
        </member>
        <member name="T:Kooboo.HealthMonitoring.WebBaseErrorEventWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.HealthMonitoring.WebRequestErrorEventWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.IPagedList`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Kooboo.IPagedList`1.CurrentPageIndex">
            <summary>
            Gets or sets the index of the current page.
            </summary>
            <value>
            The index of the current page.
            </value>
        </member>
        <member name="P:Kooboo.IPagedList`1.PageSize">
            <summary>
            Gets or sets the size of the page.
            </summary>
            <value>
            The size of the page.
            </value>
        </member>
        <member name="P:Kooboo.IPagedList`1.TotalItemCount">
            <summary>
            Gets or sets the total item count.
            </summary>
        </member>
        <member name="P:Kooboo.IPagedList`1.TotalPageCount">
            <summary>
            Gets the total page count.
            </summary>
            <value>
            The total page count.
            </value>
        </member>
        <member name="P:Kooboo.IPagedList`1.StartRecordIndex">
            <summary>
            Gets the start index of the record.
            </summary>
            <value>
            The start index of the record.
            </value>
        </member>
        <member name="P:Kooboo.IPagedList`1.EndRecordIndex">
            <summary>
            Gets the end index of the record.
            </summary>
            <value>
            The end index of the record.
            </value>
        </member>
        <member name="T:Kooboo.Job.IJob">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Job.IJob.Execute(System.Object)">
            <summary>
            Executes the specified execution state.
            </summary>
            <param name="executionState">State of the execution.</param>
        </member>
        <member name="M:Kooboo.Job.IJob.Error(System.Exception)">
            <summary>
            Errors the specified e.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="T:Kooboo.Job.JobExecutor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Job.JobExecutor.#ctor(Kooboo.Job.IJob,System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Job.JobExecutor"/> class.
            </summary>
            <param name="job">The job.</param>
            <param name="interval">The interval.</param>
            <param name="executionState">State of the execution.</param>
        </member>
        <member name="F:Kooboo.Job.JobExecutor.timer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Job.JobExecutor.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Kooboo.Job.JobExecutor.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="P:Kooboo.Job.JobExecutor.Job">
            <summary>
            Gets the job.
            </summary>
            <value>
            The job.
            </value>
        </member>
        <member name="P:Kooboo.Job.JobExecutor.Interval">
            <summary>
            Gets the interval.
            </summary>
            <value>
            The interval.
            </value>
        </member>
        <member name="P:Kooboo.Job.JobExecutor.ExecutionState">
            <summary>
            Gets the state of the execution.
            </summary>
            <value>
            The state of the execution.
            </value>
        </member>
        <member name="P:Kooboo.Job.JobExecutor.Started">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Kooboo.Job.JobExecutor"/> is started.
            </summary>
            <value>
              <c>true</c> if started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Kooboo.Job.JobExecutor.IsRunning">
            <summary>
            Gets a value indicating whether this instance is running.
            </summary>
            <value>
            <c>true</c> if this instance is running; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Kooboo.Job.Jobs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Job.Jobs.AttachJob(System.String,Kooboo.Job.IJob,System.Int32,System.Object)">
            <summary>
            Attaches the job.
            </summary>
            <param name="name">The name.</param>
            <param name="job">The job.</param>
            <param name="interval">The interval.</param>
            <param name="executionState">State of the execution.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Job.Jobs.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Kooboo.Job.Jobs.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="P:Kooboo.Job.Jobs.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="T:Kooboo.Job.TestJob">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Job.TestJob.Execute(System.Object)">
            <summary>
            Executes the specified execution state.
            </summary>
            <param name="executionState">State of the execution.</param>
        </member>
        <member name="M:Kooboo.Job.TestJob.Error(System.Exception)">
            <summary>
            Errors the specified e.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="T:Kooboo.KoobooException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.KoobooException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.KoobooException"/> class.
            </summary>
        </member>
        <member name="M:Kooboo.KoobooException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.KoobooException"/> class.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:Kooboo.KoobooException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.KoobooException"/> class.
            </summary>
            <param name="msg">The MSG.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:System.Linq.Dynamic.DynamicQueryable">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicQueryable.Where``1(System.Linq.IQueryable{``0},System.String,System.Object[])">
            <summary>
            Wheres the specified source.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="predicate">The predicate.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicQueryable.Where(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Wheres the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="predicate">The predicate.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicQueryable.Select(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Selects the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="selector">The selector.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicQueryable.OrderBy``1(System.Linq.IQueryable{``0},System.String,System.Object[])">
            <summary>
            Orders the by.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="ordering">The ordering.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicQueryable.OrderBy(System.Linq.IQueryable,System.String,System.Object[])">
            <summary>
            Orders the by.
            </summary>
            <param name="source">The source.</param>
            <param name="ordering">The ordering.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicQueryable.Take(System.Linq.IQueryable,System.Int32)">
            <summary>
            Takes the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="count">The count.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicQueryable.Skip(System.Linq.IQueryable,System.Int32)">
            <summary>
            Skips the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="count">The count.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicQueryable.GroupBy(System.Linq.IQueryable,System.String,System.String,System.Object[])">
            <summary>
            Groups the by.
            </summary>
            <param name="source">The source.</param>
            <param name="keySelector">The key selector.</param>
            <param name="elementSelector">The element selector.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicQueryable.Any(System.Linq.IQueryable)">
            <summary>
            Anies the specified source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:System.Linq.Dynamic.DynamicClass">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicClass.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:System.Linq.Dynamic.DynamicProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicProperty.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Linq.Dynamic.DynamicProperty"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:System.Linq.Dynamic.DynamicProperty.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:System.Linq.Dynamic.DynamicProperty.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:System.Linq.Dynamic.DynamicExpression">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.Parse(System.Type,System.String,System.Object[])">
            <summary>
            Parses the specified result type.
            </summary>
            <param name="resultType">Type of the result.</param>
            <param name="expression">The expression.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.ParseLambda(System.Type,System.Type,System.String,System.Object[])">
            <summary>
            Parses the lambda.
            </summary>
            <param name="itType">It type.</param>
            <param name="resultType">Type of the result.</param>
            <param name="expression">The expression.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.ParseLambda(System.Linq.Expressions.ParameterExpression[],System.Type,System.String,System.Object[])">
            <summary>
            Parses the lambda.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="resultType">Type of the result.</param>
            <param name="expression">The expression.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.ParseLambda``2(System.String,System.Object[])">
            <summary>
            Parses the lambda.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="S"></typeparam>
            <param name="expression">The expression.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.CreateClass(System.Linq.Dynamic.DynamicProperty[])">
            <summary>
            Creates the class.
            </summary>
            <param name="properties">The properties.</param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.CreateClass(System.Collections.Generic.IEnumerable{System.Linq.Dynamic.DynamicProperty})">
            <summary>
            Creates the class.
            </summary>
            <param name="properties">The properties.</param>
            <returns></returns>
        </member>
        <member name="T:System.Linq.Dynamic.ParseException">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Linq.Dynamic.ParseException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Linq.Dynamic.ParseException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:System.Linq.Dynamic.ParseException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
              </PermissionSet>
        </member>
        <member name="P:System.Linq.Dynamic.ParseException.Position">
            <summary>
            Gets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="T:Kooboo.Linq.PredicateBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Linq.PredicateBuilder.True``1">
            <summary>
            Trues this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Linq.PredicateBuilder.False``1">
            <summary>
            Falses this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Linq.PredicateBuilder.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Ors the specified expr1.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expr1">The expr1.</param>
            <param name="expr2">The expr2.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Linq.PredicateBuilder.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Ands the specified expr1.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expr1">The expr1.</param>
            <param name="expr2">The expr2.</param>
            <returns></returns>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.BidirectionalDictionary`2">
            <summary>
            
            </summary>
            <typeparam name="TFirst">The type of the first.</typeparam>
            <typeparam name="TSecond">The type of the second.</typeparam>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.BidirectionalDictionary`2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.BidirectionalDictionary`2.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
            <summary>
            
            </summary>
            <param name="firstToSecondDictionary">The first to second dictionary.</param>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.BidirectionalDictionary`2.ExistsInFirst(`0)">
            <summary>
            Existses the in first.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.BidirectionalDictionary`2.ExistsInSecond(`1)">
            <summary>
            Existses the in second.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.BidirectionalDictionary`2.GetSecondValue(`0)">
            <summary>
            Gets the second value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.BidirectionalDictionary`2.GetFirstValue(`1)">
            <summary>
            Gets the first value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.BidirectionalDictionary`2.AddValue(`0,`1)">
            <summary>
            Adds the value.
            </summary>
            <param name="firstValue">The first value.</param>
            <param name="secondValue">The second value.</param>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.BidirectionalDictionary`2.FirstToSecondDictionary">
            <summary>
            Gets or sets the first to second dictionary.
            </summary>
            <value>
            The first to second dictionary.
            </value>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.BidirectionalDictionary`2.SecondToFirstDictionary">
            <summary>
            Gets or sets the second to first dictionary.
            </summary>
            <value>
            The second to first dictionary.
            </value>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.EnglishPluralizationService">
            <summary>
            
            </summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.PluralizationService">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.PluralizationService.IsPlural(System.String)">
            <summary>
            Determines whether the specified word is plural.
            </summary>
            <param name="word">The word.</param>
            <returns>
              <c>true</c> if the specified word is plural; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.PluralizationService.IsSingular(System.String)">
            <summary>
            Determines whether the specified word is singular.
            </summary>
            <param name="word">The word.</param>
            <returns>
              <c>true</c> if the specified word is singular; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.PluralizationService.Pluralize(System.String)">
            <summary>
            Pluralizes the specified word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.PluralizationService.Singularize(System.String)">
            <summary>
            Singularizes the specified word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)">
            <summary>
            Creates the service.
            </summary>
            <param name="culture">The culture.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.PluralizationService.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>
            The culture.
            </value>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.ICustomPluralizationMapping">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.ICustomPluralizationMapping.AddWord(System.String,System.String)">
            <summary>
            Adds the word.
            </summary>
            <param name="singular">The singular.</param>
            <param name="plural">The plural.</param>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.EnglishPluralizationService.IsPlural(System.String)">
            <summary>
            Determines whether the specified word is plural.
            </summary>
            <param name="word">The word.</param>
            <returns>
              <c>true</c> if the specified word is plural; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.EnglishPluralizationService.IsSingular(System.String)">
            <summary>
            Determines whether the specified word is singular.
            </summary>
            <param name="word">The word.</param>
            <returns>
              <c>true</c> if the specified word is singular; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.EnglishPluralizationService.Pluralize(System.String)">
            <summary>
            Pluralizes the specified word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.EnglishPluralizationService.Singularize(System.String)">
            <summary>
            Singularizes the specified word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.EnglishPluralizationService.AddWord(System.String,System.String)">
            <summary>
            Adds the word.
            </summary>
            <param name="singular">The singular.</param>
            <param name="plural">The plural.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.PluralizationServiceUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.PluralizationServiceUtil.DoesWordContainSuffix(System.String,System.Collections.Generic.IEnumerable{System.String},System.Globalization.CultureInfo)">
            <summary>
            Doeses the word contain suffix.
            </summary>
            <param name="word">The word.</param>
            <param name="suffixes">The suffixes.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.PluralizationServiceUtil.TryGetMatchedSuffixForWord(System.String,System.Collections.Generic.IEnumerable{System.String},System.Globalization.CultureInfo,System.String@)">
            <summary>
            Tries the get matched suffix for word.
            </summary>
            <param name="word">The word.</param>
            <param name="suffixes">The suffixes.</param>
            <param name="culture">The culture.</param>
            <param name="matchedSuffix">The matched suffix.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.PluralizationServiceUtil.TryInflectOnSuffixInWord(System.String,System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.String},System.Globalization.CultureInfo,System.String@)">
            <summary>
            Tries the inflect on suffix in word.
            </summary>
            <param name="word">The word.</param>
            <param name="suffixes">The suffixes.</param>
            <param name="operationOnWord">The operation on word.</param>
            <param name="culture">The culture.</param>
            <param name="newWord">The new word.</param>
            <returns></returns>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.StringBidirectionalDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.StringBidirectionalDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.StringBidirectionalDictionary"/> class.
            </summary>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.StringBidirectionalDictionary.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.StringBidirectionalDictionary"/> class.
            </summary>
            <param name="firstToSecondDictionary">The first to second dictionary.</param>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.StringBidirectionalDictionary.ExistsInFirst(System.String)">
            <summary>
            Existses the in first.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.StringBidirectionalDictionary.ExistsInSecond(System.String)">
            <summary>
            Existses the in second.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.StringBidirectionalDictionary.GetFirstValue(System.String)">
            <summary>
            Gets the first value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.ModelConfiguration.Design.PluralizationServices.StringBidirectionalDictionary.GetSecondValue(System.String)">
            <summary>
            Gets the second value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Runtime.Serialization.DataContractSerializationHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Runtime.Serialization.DataContractSerializationHelper.Serialize``1(``0,System.String,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Serializes the specified o.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="o">The o.</param>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Kooboo.Runtime.Serialization.DataContractSerializationHelper.Serialize``1(``0,System.IO.Stream,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Serializes the specified o.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="o">The o.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Kooboo.Runtime.Serialization.DataContractSerializationHelper.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified file path.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Runtime.Serialization.DataContractSerializationHelper.Deserialize(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.String)">
            <summary>
            Deserializes the specified type.
            </summary>
            <param name="type">The type.</param>
            <param name="knownTypes">The known types.</param>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Runtime.Serialization.DataContractSerializationHelper.Deserialize(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.IO.Stream)">
            <summary>
            Deserializes the specified type.
            </summary>
            <param name="type">The type.</param>
            <param name="knownTypes">The known types.</param>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Runtime.Serialization.DataContractSerializationHelper.SerializeAsXml``1(``0,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Serializes as XML.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="o">The o.</param>
            <param name="knownTypes">The known types.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Runtime.Serialization.DataContractSerializationHelper.DeserializeFromXml``1(System.String,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Deserializes from XML.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml">The XML.</param>
            <param name="knownTypes">The known types.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Configuration.FileConfigurationSection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Configuration.FileConfigurationSection.GetSection(System.String,System.String)">
            <summary>
            Gets the section.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="sectionName">Name of the section.</param>
        </member>
        <member name="T:System.ServiceModel.Web.JSONPBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="F:System.ServiceModel.Web.JSONPBehavior.DefaultCallback">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ServiceModel.Web.JSONPBehavior"/> class.
            </summary>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPBehavior.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ServiceModel.Web.JSONPBehavior"/> class.
            </summary>
            <param name="callback">The callback.</param>
        </member>
        <member name="P:System.ServiceModel.Web.JSONPBehavior.Callback">
            <summary>
            Gets or sets the callback.
            </summary>
            <value>
            The callback.
            </value>
        </member>
        <member name="T:System.ServiceModel.Web.JSONPBindingElement">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPBindingElement.CreateMessageEncoderFactory">
            <summary>
            When overridden in a derived class, creates a factory for producing message encoders.
            </summary>
            <returns>
            The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> used to produce message encoders.
            </returns>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPBindingElement.Clone">
            <summary>
            When overridden in a derived class, returns a copy of the binding element object.
            </summary>
            <returns>
            A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object that is a deep clone of the original.
            </returns>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Builds the channel factory.
            </summary>
            <typeparam name="TChannel">The type of the channel.</typeparam>
            <param name="context">The context.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Determines whether this instance [can build channel factory] the specified context.
            </summary>
            <typeparam name="TChannel">The type of the channel.</typeparam>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if this instance [can build channel factory] the specified context; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Builds the channel listener.
            </summary>
            <typeparam name="TChannel">The type of the channel.</typeparam>
            <param name="context">The context.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Determines whether this instance [can build channel listener] the specified context.
            </summary>
            <typeparam name="TChannel">The type of the channel.</typeparam>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if this instance [can build channel listener] the specified context; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Gets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="P:System.ServiceModel.Web.JSONPBindingElement.MessageVersion">
            <summary>
            When overridden in a derived class, gets or sets the message version that can be handled by the message encoders produced by the message encoder factory.
            </summary>
            <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion"/> used by the encoders produced by the message encoder factory.</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:System.ServiceModel.Web.JsonpBindingExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.ServiceModel.Web.JsonpBindingExtension.CreateBindingElement">
            <summary>
            When overridden in a derived class, returns a custom binding element object.
            </summary>
            <returns>
            A custom <see cref="T:System.ServiceModel.Channels.BindingElement" /> object.
            </returns>
        </member>
        <member name="P:System.ServiceModel.Web.JsonpBindingExtension.BindingElementType">
            <summary>
            When overridden in a derived class, gets the <see cref="T:System.Type" /> object that represents the custom binding element.
            </summary>
            <returns>A <see cref="T:System.Type" /> object that represents the custom binding type.</returns>
        </member>
        <member name="T:System.ServiceModel.Web.JSONPMessageProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:System.ServiceModel.Web.JSONPMessageProperty.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPMessageProperty.CreateCopy">
            <summary>
            Creates a copy of the current instance.
            </summary>
            <returns>
            A <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> object that is a copy of the current instance.
            </returns>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPMessageProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ServiceModel.Web.JSONPMessageProperty"/> class.
            </summary>
        </member>
        <member name="P:System.ServiceModel.Web.JSONPMessageProperty.MethodName">
            <summary>
            Gets or sets the name of the method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="T:System.ServiceModel.Web.JSONPEncoderFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.ServiceModel.Web.JSONPEncoderFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ServiceModel.Web.JSONPEncoderFactory"/> class.
            </summary>
        </member>
        <member name="P:System.ServiceModel.Web.JSONPEncoderFactory.Encoder">
            <summary>
            When overridden in a derived class, gets the message encoder that is produced by the factory.
            </summary>
            <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> used by the factory.</returns>
        </member>
        <member name="P:System.ServiceModel.Web.JSONPEncoderFactory.MessageVersion">
            <summary>
            When overridden in a derived class, gets the message version that is used by the encoders produced by the factory to encode messages.
            </summary>
            <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by the factory.</returns>
        </member>
        <member name="T:System.ServiceModel.Web.JSONPEncoderFactory.JSONPEncoder">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.ServiceProcess.ApplicationStarter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.ServiceProcess.ApplicationStarter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.ServiceProcess.ApplicationStarter"/> class.
            </summary>
        </member>
        <member name="M:Kooboo.ServiceProcess.ApplicationStarter.Run(System.String[])">
            <summary>
            Runs the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Kooboo.ServiceProcess.ApplicationStarter.CreateInstaller(Kooboo.ServiceProcess.ServiceInstallEventArgs)">
            <summary>
            Creates the installer.
            </summary>
            <param name="args">The <see cref="T:Kooboo.ServiceProcess.ServiceInstallEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.ServiceProcess.ApplicationStarter.CreateServiceInstaller(Kooboo.ServiceProcess.ServiceInstallEventArgs)">
            <summary>
            Creates the service installer.
            </summary>
            <param name="args">The <see cref="T:Kooboo.ServiceProcess.ServiceInstallEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.ServiceProcess.ApplicationStarter.CreateServiceProcessInstaller(Kooboo.ServiceProcess.ServiceInstallEventArgs)">
            <summary>
            Creates the service process installer.
            </summary>
            <param name="args">The <see cref="T:Kooboo.ServiceProcess.ServiceInstallEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.ServiceProcess.ApplicationStarter.OnServiceInstalling(Kooboo.ServiceProcess.ServiceInstallEventArgs)">
            <summary>
            Raises the <see cref="E:ServiceInstalling"/> event.
            </summary>
            <param name="args">The <see cref="T:Kooboo.ServiceProcess.ServiceInstallEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Kooboo.ServiceProcess.ApplicationStarter.OnStart">
            <summary>
            Called when [start].
            </summary>
        </member>
        <member name="M:Kooboo.ServiceProcess.ApplicationStarter.OnStop">
            <summary>
            Called when [stop].
            </summary>
        </member>
        <member name="P:Kooboo.ServiceProcess.ApplicationStarter.Commands">
            <summary>
            Gets the commands.
            </summary>
            <value>
            The commands.
            </value>
        </member>
        <member name="E:Kooboo.ServiceProcess.ApplicationStarter.ServiceInstalling">
            <summary>
            Occurs when [service installing].
            </summary>
        </member>
        <member name="E:Kooboo.ServiceProcess.ApplicationStarter.Start">
            <summary>
            Occurs when [start].
            </summary>
        </member>
        <member name="E:Kooboo.ServiceProcess.ApplicationStarter.Stop">
            <summary>
            Occurs when [stop].
            </summary>
        </member>
        <member name="T:Kooboo.ServiceProcess.CommandCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.ServiceProcess.CommandCollection.#ctor(Kooboo.ServiceProcess.ApplicationStarter)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.ServiceProcess.CommandCollection"/> class.
            </summary>
            <param name="starter">The starter.</param>
        </member>
        <member name="M:Kooboo.ServiceProcess.CommandCollection.Add(Kooboo.ServiceProcess.ICommand)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Kooboo.ServiceProcess.CommandCollection.Insert(System.Int32,Kooboo.ServiceProcess.ICommand)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="P:Kooboo.ServiceProcess.CommandCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Kooboo.ServiceProcess.ICommand"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Kooboo.ServiceProcess.ICommand"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.ServiceProcess.ServiceInstallEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.ServiceProcess.ServiceInstallEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.ServiceProcess.ServiceInstallEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Kooboo.ServiceProcess.ServiceInstallEventArgs.Install">
            <summary>
            Gets or sets the install.
            </summary>
            <value>
            The install.
            </value>
        </member>
        <member name="P:Kooboo.ServiceProcess.ServiceInstallEventArgs.Service">
            <summary>
            Gets or sets the service.
            </summary>
            <value>
            The service.
            </value>
        </member>
        <member name="T:Kooboo.ServiceProcess.ServiceInstallEventArgs.InstallArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kooboo.ServiceProcess.ServiceInstallEventArgs.InstallArgs.StateDir">
            <summary>
            Gets or sets the state dir.
            </summary>
            <value>
            The state dir.
            </value>
        </member>
        <member name="P:Kooboo.ServiceProcess.ServiceInstallEventArgs.InstallArgs.LogToConsole">
            <summary>
            Gets or sets a value indicating whether [log to console].
            </summary>
            <value>
              <c>true</c> if [log to console]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Kooboo.ServiceProcess.ServiceInstallEventArgs.InstallArgs.LogFile">
            <summary>
            Gets or sets the log file.
            </summary>
            <value>
            The log file.
            </value>
        </member>
        <member name="T:Kooboo.ServiceProcess.ServiceInstallEventArgs.ServiceArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.ServiceProcess.ServiceInstallEventArgs.ServiceArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.ServiceProcess.ServiceInstallEventArgs.ServiceArgs"/> class.
            </summary>
        </member>
        <member name="P:Kooboo.ServiceProcess.ServiceInstallEventArgs.ServiceArgs.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Kooboo.ServiceProcess.ServiceInstallEventArgs.ServiceArgs.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Kooboo.ServiceProcess.ServiceInstallEventArgs.ServiceArgs.Account">
            <summary>
            Gets or sets the account.
            </summary>
            <value>
            The account.
            </value>
        </member>
        <member name="P:Kooboo.ServiceProcess.ServiceInstallEventArgs.ServiceArgs.StartMode">
            <summary>
            Gets or sets the start mode.
            </summary>
            <value>
            The start mode.
            </value>
        </member>
        <member name="T:Kooboo.ServiceProcess.ConsoleCommand">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.ServiceProcess.ICommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.ServiceProcess.ICommand.Execute(System.String[])">
            <summary>
            Executes the specified args.
            </summary>
            <param name="args">The args.</param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.ServiceProcess.ICommand.Starter">
            <summary>
            Gets or sets the starter.
            </summary>
            <value>
            The starter.
            </value>
        </member>
        <member name="M:Kooboo.ServiceProcess.ConsoleCommand.Execute(System.String[])">
            <summary>
            Executes the specified args.
            </summary>
            <param name="args">The args.</param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.ServiceProcess.ConsoleCommand.Starter">
            <summary>
            Gets or sets the starter.
            </summary>
            <value>
            The starter.
            </value>
        </member>
        <member name="T:Kooboo.ServiceProcess.InstallCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.ServiceProcess.InstallCommand.Execute(System.String[])">
            <summary>
            Executes the specified args.
            </summary>
            <param name="args">The args.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.ServiceProcess.InstallCommand.InstallService(Kooboo.ServiceProcess.ServiceInstallEventArgs)">
            <summary>
            Installs the service.
            </summary>
            <param name="args">The <see cref="T:Kooboo.ServiceProcess.ServiceInstallEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Kooboo.ServiceProcess.InstallCommand.StartService(Kooboo.ServiceProcess.ServiceInstallEventArgs)">
            <summary>
            Starts the service.
            </summary>
            <param name="args">The <see cref="T:Kooboo.ServiceProcess.ServiceInstallEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Kooboo.ServiceProcess.InstallCommand.Starter">
            <summary>
            Gets or sets the starter.
            </summary>
            <value>
            The starter.
            </value>
        </member>
        <member name="T:Kooboo.ServiceProcess.UninstallCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.ServiceProcess.UninstallCommand.Execute(System.String[])">
            <summary>
            Executes the specified args.
            </summary>
            <param name="args">The args.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.ServiceProcess.UninstallCommand.UninstallService(Kooboo.ServiceProcess.ServiceInstallEventArgs)">
            <summary>
            Uninstalls the service.
            </summary>
            <param name="args">The <see cref="T:Kooboo.ServiceProcess.ServiceInstallEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Kooboo.ServiceProcess.UninstallCommand.Starter">
            <summary>
            Gets or sets the starter.
            </summary>
            <value>
            The starter.
            </value>
        </member>
        <member name="T:Kooboo.UniqueIdGenerator">
            <summary>
            http://jopinblog.wordpress.com/2009/02/04/a-shorter-friendlier-guiduuid-in-net/
            </summary>
        </member>
        <member name="M:Kooboo.UniqueIdGenerator.GetNext(System.Byte[])">
            <summary>
            Gets the next.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:Kooboo.UniqueIdGenerator.GetBase32UniqueId(System.Int32)">
            <summary>
            Gets the base32 unique id.
            </summary>
            <param name="numDigits">The num digits.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.UniqueIdGenerator.GetBase32UniqueId(System.Byte[],System.Int32)">
            <summary>
            Gets the base32 unique id.
            </summary>
            <param name="basis">The basis.</param>
            <param name="numDigits">The num digits.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Web.Css.ColonCommentDictionary">
            <example>
            /*
             * key1: value1
             * key2: value2
             */
            </example>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.Design.GridColumnAttribute.GridColumnType">
            <summary>
            实现IGridColumn接口
            用于自定义输出列头
            </summary>
            <value>
            The type of the grid column.
            </value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.Design.GridColumnAttribute.GridItemColumnType">
            <summary>
            实现IGridItemColumn接口
            用于自定义输出行的列
            </summary>
            <value>
            The type of the grid item column.
            </value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.Design.GridAttribute.GridModelType">
            <summary>
            The custom grid model type inherit from IGridModel.
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.Design.GridAttribute.GridItemType">
            <summary>
            The custom grid item type inherit from IGridItem
            </summary>
            <value>
            The type of the grid item.
            </value>
        </member>
        <member name="M:Kooboo.Web.Mvc.Grid2.IGridModel.GetItems">
            <summary>
            Gets the items.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridModel.GridAttribute">
            <summary>
            Gets the grid attribute.
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridModel.ModelMetadata">
            <summary>
            Gets the model metadata.
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridModel.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridModel.Checkable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Kooboo.Web.Mvc.Grid2.IGridModel"/> is checkable.
            </summary>
            <value>
              <c>true</c> if checkable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridModel.IdPorperty">
            <summary>
            Gets or sets the id porperty.
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridModel.ViewContext">
            <summary>
            Gets or sets the view context.
            </summary>
        </member>
        <member name="M:Kooboo.Web.Mvc.Grid2.GridModel.GetItems">
            <summary>
            返回集合中每个数据对应的列表行
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.GridModel.Columns">
            <summary>
             获取所有的列定义
            </summary>
        </member>
        <member name="M:Kooboo.Web.Mvc.Grid2.IGridColumn.RenderHeader(System.Web.Mvc.ViewContext)">
            <summary>
            输出列头
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Grid2.IGridColumn.RenderHeaderContainerAtts(System.Web.Mvc.ViewContext)">
            <summary>
            输出th（容器）的HTML属性
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridColumn.GridModel">
            <summary>
            Gets the grid model.
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridColumn.ColumnAttribute">
            <summary>
            Gets the column attribute.
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridColumn.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>
            The name of the property.
            </value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridColumn.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="M:Kooboo.Web.Mvc.Grid2.IGridItem.RenderItemContainerAtts">
            <summary>
            输出tr（容器）的HTML属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Grid2.IGridItem.GetItemColumns">
            <summary>
            返回该行的所有的字段的展现对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridItem.GridModel">
            <summary>
            对应的GridModel对象
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridItem.DataItem">
            <summary>
            原始数据对象
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridItem.DataIndex">
            <summary>
            数据下标
            </summary>
            <value>
            The index of the data.
            </value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridItem.IsOddItem">
            <summary>
            是否为奇数行
            </summary>
            <value>
            	<c>true</c> if this instance is odd item; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridItem.IdPropertyValue">
            <summary>
            该行的主键
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridItem.IsCheckable">
            <summary>
            该行是否可选择
            </summary>
            <value>
            	<c>true</c> if this instance is checkable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Kooboo.Web.Mvc.Grid2.GridItem.GetItemColumns">
            <summary>
            返回该行的所有的字段的展现对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.GridItem.GridModel">
            <summary>
            对应的GridModel对象
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.GridItem.DataItem">
            <summary>
            原始数据对象
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.GridItem.DataIndex">
            <summary>
            数据下标
            </summary>
            <value>
            The index of the data.
            </value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.GridItem.IsOddItem">
            <summary>
            是否为奇数行
            </summary>
            <value>
            	<c>true</c> if this instance is odd item; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Kooboo.Web.Mvc.Grid2.IGridItemColumn.RenderItemColumnContainerAtts(System.Web.Mvc.ViewContext)">
            <summary>
            输出td的HTML属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Grid2.IGridItemColumn.RenderItemColumn(System.Web.Mvc.ViewContext)">
            <summary>
            输出td的HTML文本
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridItemColumn.DataItem">
            <summary>
            行数据对象
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid2.IGridItemColumn.PropertyValue">
            <summary>
            属性值
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid.PageSizeAttribute.SizeOptions">
            <summary>
            Gets or sets the size options.
            <example>25,50,100</example>
            </summary>
            <value>The size options.</value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid.GridActionAttribute.RouteValueProperties">
            <summary>
            Gets or sets the route value properties.
            <example>
            1. "Name,Property2"
            2. "Name=FullName" : "FullName" is the model property, "Name" is the alias for RouteValueName in RouteValueDictionary.
            </example>
            </summary>
            <value>The route value properties.</value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid.GridActionAttribute.CellVisibleArbiter">
            <summary>
            A type of  IVisibleArbiter
            </summary>
            <value>The visible arbiter.</value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid.GridActionAttribute.RouteValuesGetter">
            <summary>
            typeof IGridActionRouteValuesGetter
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid.GridActionAttribute.ColumnVisibleArbiter">
            <summary>
            A type of IColumnVisibleArbiter
            </summary>
            <value>
            The column visible arbiter.
            </value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Grid.GridActionAttribute.Renderer">
            <summary>
            type of IGridItemActionRender
            </summary>
        </member>
        <member name="T:Kooboo.ComponentModel.TypeDescriptorHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.ComponentModel.TypeDescriptorHelper.Discover(System.Collections.Generic.IEnumerable{System.Type},System.Boolean)">
            <summary>
            Discovers the specified types.
            </summary>
            <param name="types">The types.</param>
            <param name="overwrite">if set to <c>true</c> [overwrite].</param>
        </member>
        <member name="M:Kooboo.ComponentModel.TypeDescriptorHelper.RegisterMetadataType(System.Type,System.Type)">
            <summary>
            Registers the type of the metadata.
            </summary>
            <param name="type">The type.</param>
            <param name="metadataType">Type of the metadata.</param>
        </member>
        <member name="M:Kooboo.ComponentModel.TypeDescriptorHelper.Get(System.Type)">
            <summary>
            Gets the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Paging.PagerBuilder.#ctor(System.Web.Mvc.HtmlHelper,System.Web.Mvc.AjaxHelper,Kooboo.Web.Mvc.Paging.PagerOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            used when PagedList is null
            </summary>
        </member>
        <member name="M:Kooboo.Web.Mvc.Paging.PagerBuilder.GenerateUrl(System.Int32)">
            <summary>
            generate paging url
            </summary>
            <param name="pageIndex">page index to generate navigate url</param>
            <returns>navigated url for pager item</returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Paging.PagerBuilder.RenderPager">
            <summary>
            render paging control
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.StatisticsTextFormatString">
            <summary>
            Gets or sets the statistics text format string.<example> FROM {0} TO {1} OF {2}</example>
            </summary>
            <value>
            The statistics text format string.
            </value>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.AutoHide">
            <summary>
            whether or not hide control(render nothing) automatically when there's only one page
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.PageIndexOutOfRangeErrorMessage">
            <summary>
            PageIndexOutOfRangeErrorMessage
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.InvalidPageIndexErrorMessage">
            <summary>
            InvalidPageIndexErrorMessage
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.PageIndexParameterName">
            <summary>
            page index parameter name in url
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.ShowPageIndexBox">
            <summary>
            Whether or not show page index box
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.PageIndexBoxType">
            <summary>
            Page index box type
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.MaximumPageIndexItems">
            <summary>
            Maximum page index items listed in dropdownlist
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.ShowGoButton">
            <summary>
            whether or not show go button
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.GoButtonText">
            <summary>
            text displayed on go button
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.PageNumberFormatString">
            <summary>
            numeric pager item format string
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.ContainerTagName">
            <summary>
            html tag name when control rendered
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.PagerItemWrapperFormatString">
            <summary>
            all pageritem wrapper format string
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.CurrentPageNumberFormatString">
            <summary>
            current pager item format string
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.NumericPagerItemWrapperFormatString">
            <summary>
            NumericPager Item Wrapper Format String
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.CurrentPagerItemWrapperFormatString">
            <summary>
            Current Pager Item Wrapper Format String
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.NavigationPagerItemWrapperFormatString">
            <summary>
            NavigationPager Item Wrapper Format String
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.MorePagerItemWrapperFormatString">
            <summary>
            MorePagerItem Wrapper Format String
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.PageIndexBoxWrapperFormatString">
            <summary>
            PageIndexBox Wrapper Format String
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.GoToPageSectionWrapperFormatString">
            <summary>
            GoToPage Section Wrapper Format String
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.AlwaysShowFirstLastPageNumber">
            <summary>
            whether or not show first and last numeric page number
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.NumericPagerItemCount">
            <summary>
            numeric pager items count
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.ShowPrevNext">
            <summary>
            whether or not show previous and next pager items
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.PrevPageText">
            <summary>
            previous page text
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.NextPageText">
            <summary>
            next page text
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.ShowNumericPagerItems">
            <summary>
            whether or not show numeric pager items
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.ShowFirstLast">
            <summary>
            whether or not show first and last pager items
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.FirstPageText">
            <summary>
            first page text
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.LastPageText">
            <summary>
            last page text
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.ShowMorePagerItems">
            <summary>
            whethor or not show more pager items
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.MorePageText">
            <summary>
            more page text
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.Id">
            <summary>
            client id of paging control container
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.HorizontalAlign">
            <summary>
            HOrizontal alignment
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.CssClass">
            <summary>
            CSS class to apply
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.ShowDisabledPagerItems">
            <summary>
            whether or not show disabled pager items
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.SeparatorHtml">
            <summary>
            seperating item html
            </summary>
        </member>
        <member name="P:Kooboo.Web.Mvc.Paging.PagerOptions.UseJqueryAjax">
            <summary>
            whether or not use jQuery ajax, as opposed to MicrosoftAjax
            </summary>
        </member>
        <member name="M:Kooboo.Web.Mvc.RequestContextExtensions.AllRouteValues(System.Web.Routing.RequestContext)">
            <summary>
            Alls the route values and query string value in current request.
            </summary>
            <param name="requestContext">The controller.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.RequestContextExtensions.UrlHelper(System.Web.Routing.RequestContext)">
            <summary>
            URLs the helper.
            </summary>
            <param name="requestContext">The request context.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.WebResourceLoader.DynamicClientResource.IDynamicClientResource.RegisterClientParser">
            <summary>
            Registers the client parser to parse the resource at client side.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.WebResourceLoader.DynamicClientResource.IDynamicClientResource.Parse(System.String)">
            <summary>
            Parses the client resource at the server side.
            </summary>
            <param name="virtualPath">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.Get(`0,System.Func{`1})">
            <summary>
            Gets the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="createCachingValue">The create caching value.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.Add(`0,`1)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.Remove(`0)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Collections.CachableDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Kooboo.Collections.CachableDictionary`2.Item(`0,System.Func{`1})">
             <summary>
             
             </summary>
             <value>
            
             </value>
             <param name="key">The key.</param>
             <param name="createCachingValue">The create caching value.</param>
             <returns></returns>
        </member>
        <member name="P:Kooboo.Collections.CachableDictionary`2.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="P:Kooboo.Collections.CachableDictionary`2.Values">
            <summary>
            Gets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="P:Kooboo.Collections.CachableDictionary`2.Item(`0)">
             <summary>
            
             </summary>
             <value>
             
             </value>
             <param name="key">The key.</param>
             <returns></returns>
        </member>
        <member name="P:Kooboo.Collections.CachableDictionary`2.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Kooboo.Collections.CachableDictionary`2.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Kooboo.Settings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kooboo.Settings.BaseDirectory">
            <summary>
            Gets the base directory.
            </summary>
            <value>
            The base directory.
            </value>
        </member>
        <member name="P:Kooboo.Settings.BinDirectory">
            <summary>
            Gets the bin directory.
            </summary>
            <value>
            The bin directory.
            </value>
        </member>
        <member name="P:Kooboo.Settings.ComponentsDirectory">
            <summary>
            Gets the components directory.
            </summary>
            <value>
            The components directory.
            </value>
        </member>
        <member name="P:Kooboo.Settings.IsWebApplication">
            <summary>
            Gets a value indicating whether this instance is web application.
            </summary>
            <value>
            <c>true</c> if this instance is web application; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Kooboo.Drawing.ColorExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.ColorExtensions.Light(System.Drawing.Color)">
            <summary>        
            让颜色变淡一些
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.ColorExtensions.Dark(System.Drawing.Color)">
            <summary>
            Darks the specified color.
            让颜色变深一些
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Drawing.Corner">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Corner.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Corner.All">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Corner.TopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Corner.TopRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Corner.BottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Corner.BottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Filters.BasicFilter">
            <summary>
            Summary description for BasicFilter.
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Filters.IFilter">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.IFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes the filter.
            </summary>
            <param name="inputImage">The input image.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.Filters.BasicFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this filter on the input image and returns the result
            </summary>
            <param name="inputImage">input image</param>
            <returns>transformed image</returns>
        </member>
        <member name="M:Kooboo.Drawing.Filters.BasicFilter.ExecuteFilterDemo(System.Drawing.Image)">
            <summary>
            Demonostration Function. Could be left unimplimented.
            To be used for presentation purposes.
            </summary>
            <param name="inputImage"></param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Drawing.Filters.BasicFilter.BackGroundColor">
            <summary>
            Gets or sets the color of the back ground.
            </summary>
            <value>
            The color of the back ground.
            </value>
        </member>
        <member name="T:Kooboo.Drawing.Filters.BlackAndWhiteFilter">
            <summary>
            Black And White filter class. Turns color images to black and white images.
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.BlackAndWhiteFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this filter on the input image and returns the result
            </summary>
            <param name="inputImage">input image</param>
            <returns>
            transformed image
            </returns>
        </member>
        <member name="M:Kooboo.Drawing.Filters.BlackAndWhiteFilter.ExecuteFilterDemo(System.Drawing.Image,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Executes the filter demo.
            </summary>
            <param name="inputImage">The input image.</param>
            <param name="filterProperties">The filter properties.</param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Drawing.Filters.BlackAndWhiteFilter.Brighter">
            <summary>
            Gets or sets the grayscale brightness. true for bright, dalse for dark.
            </summary>
            <value>
              <c>true</c> if brighter; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Kooboo.Drawing.Filters.BoxFilter">
            <summary>
            Box filter class. Creates an isometric box and renders the image on that specific view . gives a 3d view.
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.BoxFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this filter on the input image and returns the result
            </summary>
            <param name="inputImage">input image</param>
            <returns>
            transformes image into a boxed layout
            </returns>
            <example>
              <code>
            Image transformed;
            BoxFilter box = new BoxFilter();
            box.BoxDepth = 20;
            box.BoxStartColor = Color.Tan;
            box.BoxEndColor = Color.Wheat;
            transformed = box.ExecuteFilter(myImg);
              </code>
              </example>
        </member>
        <member name="P:Kooboo.Drawing.Filters.BoxFilter.BoxDepth">
            <summary>
            Defines the "3d" depth of the box
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.BoxFilter.BoxStartColor">
            <summary>
            Sets the starting color of the box gradient brush
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.BoxFilter.BoxEndColor">
            <summary>
            Sets the ending color of the box gradient brush
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.BoxFilter.SidePanelImage">
            <summary>
            A side panel image, reset to null to turn off and use the regular gradient
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.BoxFilter.TopPanelImage">
            <summary>
            A top panel image, reset to null to turn off and use the regular gradient
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Filters.CutCornersFilter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Filters.RoundedCornersFilter">
            <summary>
            ͼƬԲ�ǵĴ���
            <remarks>�������ַ���Ч����Ȼ���������ģ���������ɫ�仯ת���ͼƬ���ȽϽ��䣩ʱ�����к����Եķָ��� </remarks>
            �����˺ܶ��ַ�������Ч����������
            �������� http://forums.asp.net/p/942160/1130380.aspx �����Ļ���֮�Ͻ����޸�
            ����ʵ�����޾�ݵ�ͼƬԲ�Ǵ���
            ���Ϸ������ڣ�����ʹ���˰�ԭʼͼƬ��Ϊ��ˢ��Ȼ���������ˢ����Բ�Ǿ��Σ�Ŀǰ����Ӧ�����ܴﵽ����Ч����
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.RoundedCornersFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Drawing.Filters.RoundedCornersFilter"/> class.
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Filters.RoundedCornersFilter.ROTATE_DEGREES_TOKEN">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.RoundedCornersFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this curved corners
            filter on the input image and returns the result
            Make sure you set the BackGroundColor property before running this filter.
            </summary>
            <param name="inputImage">input image</param>
            <returns>
            Curved Corner Image
            </returns>
            <example>
              <code>
            Image transformed;
            RoundedCornersFilter rounded = new RoundedCornersFilter();
            rounded.BackGroundColor = Color.FromArgb(255, 255, 255, 255);
            rounded.CornerRadius = 15;
            transformed = rounded.ExecuteFilter(myImg);
              </code>
              </example>
        </member>
        <member name="M:Kooboo.Drawing.Filters.RoundedCornersFilter.ExecuteFilterDemo(System.Drawing.Image)">
            <summary>
            Demonostration Function. Could be left unimplimented.
            To be used for presentation purposes.
            </summary>
            <param name="inputImage"></param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Drawing.Filters.RoundedCornersFilter.CornerRadius">
            <summary>
            Determins the corner's radius. in pixels
            </summary>
            <value>
            The corner radius.
            </value>
        </member>
        <member name="P:Kooboo.Drawing.Filters.RoundedCornersFilter.Corner">
            <summary>
            Gets or sets the corner.
            </summary>
            <value>
            The corner.
            </value>
        </member>
        <member name="M:Kooboo.Drawing.Filters.CutCornersFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this curved corners
            filter on the input image and returns the result
            Make sure you set the BackGroundColor property before running this filter.
            </summary>
            <param name="inputImage">input image</param>
            <returns>
            Curved Corner Image
            </returns>
            <example>
              <code>
            Image transformed;
            RoundedCornersFilter rounded = new RoundedCornersFilter();
            rounded.BackGroundColor = Color.FromArgb(255, 255, 255, 255);
            rounded.CornerRadius = 15;
            transformed = rounded.ExecuteFilter(myImg);
              </code>
              </example>
        </member>
        <member name="T:Kooboo.Drawing.Filters.DropShadowFilter">
            <summary>
            DropShadowFilter. adds the picture a drop shadow as if the image is hovering
            above the floor or infront of the wall.
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.DropShadowFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this drop shadow 
            filter on the input image and returns the result
            </summary>
            <param name="inputImage">input image</param>
            <returns>Shadow Dropped Image</returns>
            <example>
            <code>
            Image transformed;
            DropShadowFilter dropShadow = new DropShadowFilter();
            transformed = dropShadow.ExecuteFilter(myImg);
            </code>
            </example>
        </member>
        <member name="T:Kooboo.Drawing.Filters.FloorReflectionFilter">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Filters.FloorReflectionFilter.WIDTH_TOKEN_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Filters.FloorReflectionFilter.HEIGHT_TOKEN_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.FloorReflectionFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this filter on the input image and returns the result
            </summary>
            <param name="rawImage">The raw image.</param>
            <returns>
            transformed image
            </returns>
            <example>
              <code>
            Image transformed;
            FloorReflectionFilter floorReflection = new FloorReflectionFilter();
            floorReflection.AlphaDecreaseRate = 3;
            transformed = floorReflection.ExecuteFilter(myImg);
              </code>
              </example>
        </member>
        <member name="P:Kooboo.Drawing.Filters.FloorReflectionFilter.AlphaStartValue">
            <summary>
            Sets the initial transparecy value of the reflection.
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.FloorReflectionFilter.AlphaDecreaseRate">
            <summary>
            Sets the decrease rate value of the transparency
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Filters.ImageWatermarkFilter">
            <summary>
            Text Water Mark Filter .Can be used to add a watermark text to the image.
            The weater mark can be both horizontaly and verticaly aligned.
            Also provides simple captions functionality (Simple text on an image)
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Filters.WaterMarkFilter">
            <summary>
            An abstract watermark filter.
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.WaterMarkFilter.CalcDrawPosition(System.Int32,System.Int32,System.Int32,System.Single@,System.Single@)">
            <summary>
            Calculates the x and y positions to draw the watermark object
            </summary>
            <param name="width">width of the ghost/watermark image</param>
            <param name="height">height of the ghost/watermark image</param>
            <param name="yPixelsMargin">A y value margin</param>
            <param name="yPosFromBottom">the returned y value</param>
            <param name="xPositionFromLeft">the returned x value</param>
        </member>
        <member name="M:Kooboo.Drawing.Filters.ImageWatermarkFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this filter on the input image and returns the image with the WaterMark
            </summary>
            <param name="rawImage">input image</param>
            <returns>transformed image</returns>
            <example>
            <code>
            Image transformed;
            ImageWatermarkFilter imageWaterMark = new ImageWatermarkFilter();
            imageWaterMark.Valign = ImageWatermarkFilter.VAlign.Right;
            imageWaterMark.Halign = ImageWatermarkFilter.HAlign.Bottom;
            imageWaterMark.WaterMarkImage = Image.FromFile("Images/pacman.gif");
            transformed = imageWaterMark.ExecuteFilter(myImg);
            </code>
            </example>
        </member>
        <member name="P:Kooboo.Drawing.Filters.ImageWatermarkFilter.Alpha">
            <summary>
            A value between 0 to 1.0. Sets the opacity value
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Filters.Pipeline">
            <summary>
            A helper class for filters execution under the fluent methodology
            </summary>
            <example>
              <code>
            Image transformed;
            ZRLabs.Yael.Pipeline pipe = new ZRLabs.Yael.Pipeline(myImg);
            Image transformed = pipe.RoundCorners(10, Color.White).PolariodFrame("test").CurrentImage;
              </code>
              </example>
        </member>
        <member name="M:Kooboo.Drawing.Filters.Pipeline.#ctor(System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="inputImage"></param>
            <example>
            <code>
            Image transformed;
            ZRLabs.Yael.Pipeline pipe = new ZRLabs.Yael.Pipeline(myImg);
            Image transformed = pipe.RoundCorners(10, Color.White).PolariodFrame("test").CurrentImage;
            </code>
            </example>
        </member>
        <member name="M:Kooboo.Drawing.Filters.Pipeline.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Drawing.Filters.Pipeline"/> class.
            </summary>
            <param name="inputFilename">The input filename.</param>
        </member>
        <member name="M:Kooboo.Drawing.Filters.Pipeline.Rotate(System.Single)">
            <summary>
            Rotates the specified degrees.
            </summary>
            <param name="Degrees">The degrees.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.Filters.Pipeline.BlackAndWhite">
            <summary>
            Blacks the and white.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.Filters.Pipeline.Watermark(System.String)">
            <summary>
            Watermarks the specified caption.
            </summary>
            <param name="caption">The caption.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.Filters.Pipeline.PolariodFrame(System.String)">
            <summary>
            Polariods the frame.
            </summary>
            <param name="caption">The caption.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.Filters.Pipeline.RoundCorners(System.Single,System.Drawing.Color,Kooboo.Drawing.Corner)">
            <summary>
            Rounds the corners.
            </summary>
            <param name="cornerRadius">The corner radius.</param>
            <param name="background">The background.</param>
            <param name="roundCorner">The round corner.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.Filters.Pipeline.CutCorners(System.Single,System.Drawing.Color,Kooboo.Drawing.Corner)">
            <summary>
            Cuts the corners.
            </summary>
            <param name="cornerRadius">The corner radius.</param>
            <param name="background">The background.</param>
            <param name="roundCorner">The round corner.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.Filters.Pipeline.FloorReflection(System.Single,System.Single)">
            <summary>
            Floors the reflection.
            </summary>
            <param name="alphaStartValue">The alpha start value.</param>
            <param name="alphaDecreaseRate">The alpha decrease rate.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.Filters.Pipeline.Skew(System.Int32,System.Int32)">
            <summary>
            Skews the specified right shift.
            </summary>
            <param name="rightShift">The right shift.</param>
            <param name="upShift">Up shift.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Drawing.Filters.PolaroidFrameFilter">
            <summary>
            Converts the image into a "Instant Polaroid" like picture by adding a frame to the
            picture and the ability to add captions.
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.PolaroidFrameFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this filter on the input image and returns the result
            </summary>
            <param name="rawImage">The raw image.</param>
            <returns>
            transformed image
            </returns>
            <example> This sample shows how to use the Polaroids ExcuteFilter
              <code>
            Image transformed;
            PolaroidFrameFilter polaroid = new PolaroidFrameFilter();
            polaroid.WithDropShadow = true;
            polaroid.Caption = "Pitzi";
            transformed = polaroid.ExecuteFilter(myImg);
              </code>
              </example>
        </member>
        <member name="P:Kooboo.Drawing.Filters.PolaroidFrameFilter.Caption">
            <summary>
            Gets or sets the image caption (text) that will be written to the polaroid's bottom 
            section
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.PolaroidFrameFilter.CaptionColor">
            <summary>
            Gets or sets the caption's color
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.PolaroidFrameFilter.WithDropShadow">
            <summary>
            Gets or sets whether to add or remove a drop shadow to the
            Polaroid frame.
            true - will add the drop shadow
            false - will remove the drop shadow
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Filters.ResizeFilter">
            <summary>
            Resize filter class. A simple functionality to resize images
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.ResizeFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this filter on the input image and returns the result
            </summary>
            <param name="inputImage">input image</param>
            <returns>transformed image</returns>
            <example>
            <code>
            Image transformed;
            ResizeFilter resize = new ResizeFilter();
            resize.Width = 100;
            resize.Height = 70;
            transformed = resize.ExecuteFilter(myImg);
            </code>
            </example>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Kooboo.Drawing.Filters.ResizeFilter.ExecuteFilterDemo(System.Drawing.Image,System.Collections.Specialized.NameValueCollection)" -->
        <member name="M:Kooboo.Drawing.Filters.ResizeFilter.CalcAspectRatio(System.Int32,System.Int32)">
            <summary>
            Calculates the picture aspect ratio
            by dividing the width by the height
            </summary>
            <param name="width">image width</param>
            <param name="height">image height</param>
            <returns>aspect ratio</returns>
        </member>
        <member name="P:Kooboo.Drawing.Filters.ResizeFilter.Width">
            <summary>
            Image width in pixels
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.ResizeFilter.Height">
            <summary>
            Image height in pixels
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.ResizeFilter.InterpolationType">
            <summary>
            Scaling interpolation mode . can be HighQualityBicubic, Bilinear, etc.
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.ResizeFilter.KeepAspectRatio">
            <summary>
            Determines whether to keep the original aspect ratio
            false by default. Should be turned on before setting the width or height to 
            keep the original ratio
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.ResizeFilter.LockRatioByHeight">
            <summary>
            Locks the aspect ratio while keeping the height as reference.
            Meaning that setting a new height will calc the width according to the original ratio
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Filters.ResizeFilter.LockRatioByWidth">
            <summary>
            Locks the aspect ratio while keeping the width as reference.
            Meaning that setting a new width will calc the height according to the original ratio
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Filters.RotateFilter">
            <summary>
            Rotation filter class.
            References were taken from the following code example
            http://www.codeproject.com/csharp/rotateimage.asp
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.RotateFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this filter on the input image and returns the result
            </summary>
            <param name="inputImage">input image</param>
            <returns>rotated image</returns>
            <example>
            <code>
            Image transformed;
            RotateFilter rotate = new RotateFilter();
            rotate.RotateDegrees = -30;
            transformed = rotate.ExecuteFilter(myImg);
            </code>
            </example>
        </member>
        <member name="M:Kooboo.Drawing.Filters.RotateFilter.RotateImage(System.Drawing.Image,System.Single)">
            <summary>
            Creates a new Image containing the same image only rotated
            The following function code including its comments were taken from the following 
            article : http://www.codeproject.com/csharp/rotateimage.asp        
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/> to rotate</param>
            <param name="angle">The amount to rotate the image, clockwise, in degrees</param>
            <returns>A new <see cref="T:System.Drawing.Bitmap"/> that is just large enough
            to contain the rotated image without cutting any corners off.</returns>    
        </member>
        <member name="P:Kooboo.Drawing.Filters.RotateFilter.RotateDegrees">
            <summary>
            Rotation degrees value. (x/360)
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Filters.SkewFilter">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Filters.SkewFilter.RIGHT_SHIFT_TOKEN_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Filters.SkewFilter.UP_SHIFT_TOKEN_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.SkewFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this filter on the input image and returns the result
            </summary>
            <param name="rawImage">The raw image.</param>
            <returns>
            transformed image
            </returns>
            <example>
              <code>
            SkewFilter skewFilter = new SkewFilter();
            skewFilter.UpShift = 0;
            skewFilter.RightShift = 5;
            transformed = skewFilter.ExecuteFilter(myImg);
              </code>
              </example>
        </member>
        <member name="P:Kooboo.Drawing.Filters.SkewFilter.RightShift">
            <summary>
            Gets or sets the right shift.
            </summary>
            <value>
            The right shift.
            </value>
        </member>
        <member name="P:Kooboo.Drawing.Filters.SkewFilter.UpShift">
            <summary>
            Gets or sets up shift.
            </summary>
            <value>
            Up shift.
            </value>
        </member>
        <member name="T:Kooboo.Drawing.Filters.TextWatermarkFilter">
            <summary>
            Text Water Mark Filter .Can be used to add a watermark text to the image.
            The weater mark can be both horizontaly and verticaly aligned.
            Also provides simple captions functionality (Simple text on an image)
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Filters.TextWatermarkFilter.WIDTH_TOKEN_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Filters.TextWatermarkFilter.HEIGHT_TOKEN_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Filters.TextWatermarkFilter.ALPHA_TOKEN_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Filters.TextWatermarkFilter.ExecuteFilter(System.Drawing.Image)">
            <summary>
            Executes this filter on the input image and returns the image with the WaterMark
            </summary>
            <param name="rawImage">input image</param>
            <returns>
            transformed image
            </returns>
            <example>
              <code>
            Image transformed;
            TextWatermarkFilter textWaterMark = new TextWatermarkFilter();
            textWaterMark.Caption = "Pitzi";
            textWaterMark.TextSize = 20;
            textWaterMark.AutomaticTextSize = false;
            textWaterMark.Valign = TextWatermarkFilter.VAlign.Right;
            textWaterMark.Halign = TextWatermarkFilter.HAlign.Bottom;
            textWaterMark.CaptionColor = Color.Red;
            transformed = textWaterMark.ExecuteFilter(myImg);
              </code>
              </example>
        </member>
        <member name="M:Kooboo.Drawing.Filters.TextWatermarkFilter.ExecuteFilterDemo(System.Drawing.Image)">
            <summary>
            Executes the filter demo.
            </summary>
            <param name="rawImage">The raw image.</param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Drawing.Filters.TextWatermarkFilter.TextSize">
            <summary>
            Gets or sets the size of the text.
            </summary>
            <value>
            The size of the text.
            </value>
        </member>
        <member name="P:Kooboo.Drawing.Filters.TextWatermarkFilter.AutomaticTextSize">
            <summary>
            Gets or sets a value indicating whether [automatic text size].
            </summary>
            <value>
              <c>true</c> if [automatic text size]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Kooboo.Drawing.Filters.TextWatermarkFilter.CaptionAlpha">
            <summary>
            Gets or sets the caption alpha.
            </summary>
            <value>
            The caption alpha.
            </value>
        </member>
        <member name="P:Kooboo.Drawing.Filters.TextWatermarkFilter.CaptionColor">
            <summary>
            Gets or sets the color of the caption.
            </summary>
            <value>
            The color of the caption.
            </value>
        </member>
        <member name="P:Kooboo.Drawing.Filters.TextWatermarkFilter.Caption">
            <summary>
            Gets or sets the caption.
            </summary>
            <value>
            The caption.
            </value>
        </member>
        <member name="T:Kooboo.Drawing.CornersItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.CornersLine">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.CornersArc">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Corners">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Corners.#ctor(System.Single,System.Single,System.Single,System.Single,System.Double,Kooboo.Drawing.Corner)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Drawing.Corners"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="radius">The radius.</param>
            <param name="corner">The corner.</param>
        </member>
        <member name="M:Kooboo.Drawing.Corners.Execute(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Executes the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="T:Kooboo.Drawing.GraphicsExtenions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.DrawCircle(System.Drawing.Graphics,System.Drawing.Pen,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the circle.
            </summary>
            <param name="gp">The gp.</param>
            <param name="pen">The pen.</param>
            <param name="radius">The radius.</param>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.DrawCircle(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
            Draws the circle.
            </summary>
            <param name="gp">The gp.</param>
            <param name="pen">The pen.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.FillCircle(System.Drawing.Graphics,System.Drawing.Brush,System.Int32)">
            <summary>
            Fills the circle.
            </summary>
            <param name="gp">The gp.</param>
            <param name="brush">The brush.</param>
            <param name="radius">The radius.</param>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.FillCircle(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
            Fills the circle.
            </summary>
            <param name="gp">The gp.</param>
            <param name="brush">The brush.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,Kooboo.Drawing.Corner)">
            <summary>
            Fills the rounded rectangle.
            </summary>
            <param name="gp">The gp.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="radius">The radius.</param>
            <param name="border">The border.</param>
            <param name="borderColor">Color of the border.</param>
            <param name="corner">The corner.</param>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.GetRoundedPath(System.Single,System.Single,System.Single,System.Single,System.Single,Kooboo.Drawing.Corner)">
            <summary>
            Gets the rounded path.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="radius">The radius.</param>
            <param name="corner">The corner.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,Kooboo.Drawing.Corner)">
            <summary>
            Fills the rounded rectangle.
            </summary>
            <param name="gp">The gp.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="radius">The radius.</param>
            <param name="corner">The corner.</param>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,Kooboo.Drawing.Corner)">
            <summary>
            Draws the rounded rectangle.
            </summary>
            <param name="gp">The gp.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="radius">The radius.</param>
            <param name="corner">The corner.</param>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.GetRoundedRect(System.Drawing.RectangleF,System.Single,Kooboo.Drawing.Corner)">
            <summary>
            Gets the rounded rect.
            </summary>
            <param name="baseRect">The base rect.</param>
            <param name="radius">The radius.</param>
            <param name="corner">The corner.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.FillCutRectangle(System.Drawing.Graphics,System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,Kooboo.Drawing.Corner)">
            <summary>
            Fills the cut rectangle.
            </summary>
            <param name="gp">The gp.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="radius">The radius.</param>
            <param name="corner">The corner.</param>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.DrawCutRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Kooboo.Drawing.Corner)">
            <summary>
            Draws the cut rectangle.
            </summary>
            <param name="gp">The gp.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="radius">The radius.</param>
            <param name="corner">The corner.</param>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.DrawCutRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,Kooboo.Drawing.Corner)">
            <summary>
            Draws the cut rectangle.
            </summary>
            <param name="gp">The gp.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="radius">The radius.</param>
            <param name="corner">The corner.</param>
        </member>
        <member name="M:Kooboo.Drawing.GraphicsExtenions.GetCutRect(System.Drawing.RectangleF,System.Single,Kooboo.Drawing.Corner)">
            <summary>
            Gets the cut rect.
            </summary>
            <param name="baseRect">The base rect.</param>
            <param name="radius">The radius.</param>
            <param name="corner">The corner.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Drawing.Quantizer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.Quantizer.#ctor(System.Boolean)">
            <summary>
            Construct the quantizer
            </summary>
            <param name="singlePass">If true, the quantization only needs to loop through the source pixels once</param>
            <remarks>
            If you construct this class with a true value for singlePass, then the code will, when quantizing your image,
            only call the 'QuantizeImage' function. If two passes are required, the code will call 'InitialQuantizeImage'
            and then 'QuantizeImage'.
            </remarks>
        </member>
        <member name="M:Kooboo.Drawing.Quantizer.Quantize(System.Drawing.Image)">
            <summary>
            Quantize an image and return the resulting output bitmap
            </summary>
            <param name="source">The image to quantize</param>
            <returns>A quantized version of the image</returns>
        </member>
        <member name="M:Kooboo.Drawing.Quantizer.FirstPass(System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)">
            <summary>
            Execute the first pass through the pixels in the image
            </summary>
            <param name="sourceData">The source data</param>
            <param name="width">The width in pixels of the image</param>
            <param name="height">The height in pixels of the image</param>
        </member>
        <member name="M:Kooboo.Drawing.Quantizer.SecondPass(System.Drawing.Imaging.BitmapData,System.Drawing.Bitmap,System.Int32,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Execute a second pass through the bitmap
            </summary>
            <param name="sourceData">The source bitmap, locked into memory</param>
            <param name="output">The output bitmap</param>
            <param name="width">The width in pixels of the image</param>
            <param name="height">The height in pixels of the image</param>
            <param name="bounds">The bounding rectangle</param>
        </member>
        <member name="M:Kooboo.Drawing.Quantizer.InitialQuantizePixel(Kooboo.Drawing.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the first pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <remarks>
            This function need only be overridden if your quantize algorithm needs two passes,
            such as an Octree quantizer.
            </remarks>
        </member>
        <member name="M:Kooboo.Drawing.Quantizer.QuantizePixel(Kooboo.Drawing.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the second pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <returns>The quantized value</returns>
        </member>
        <member name="M:Kooboo.Drawing.Quantizer.GetPalette(System.Drawing.Imaging.ColorPalette)">
            <summary>
            Retrieve the palette for the quantized image
            </summary>
            <param name="original">Any old palette, this is overrwritten</param>
            <returns>The new color palette</returns>
        </member>
        <member name="F:Kooboo.Drawing.Quantizer._singlePass">
            <summary>
            Flag used to indicate whether a single pass or two passes are needed for quantization.
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.Quantizer.Color32">
            <summary>
            Struct that defines a 32 bpp colour
            </summary>
            <remarks>
            This struct is used to read data from a 32 bits per pixel image
            in memory, and is ordered in this manner as this is the way that
            the data is layed out in memory
            </remarks>
        </member>
        <member name="F:Kooboo.Drawing.Quantizer.Color32.Blue">
            <summary>
            Holds the blue component of the colour
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Quantizer.Color32.Green">
            <summary>
            Holds the green component of the colour
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Quantizer.Color32.Red">
            <summary>
            Holds the red component of the colour
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Quantizer.Color32.Alpha">
            <summary>
            Holds the alpha component of the colour
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.Quantizer.Color32.ARGB">
            <summary>
            Permits the color32 to be treated as an int32
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.Quantizer.Color32.Color">
            <summary>
            Return the color for this Color32 object
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.OctreeQuantizer">
            <summary>
            Quantize using an Octree
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct the octree quantizer
            </summary>
            <remarks>
            The Octree quantizer is a two pass algorithm. The initial pass sets up the octree,
            the second pass quantizes a color based on the nodes in the tree
            </remarks>
            <param name="maxColors">The maximum number of colors to return</param>
            <param name="maxColorBits">The number of significant bits</param>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.InitialQuantizePixel(Kooboo.Drawing.Quantizer.Color32)">
            <summary>
            Process the pixel in the first pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <remarks>
            This function need only be overridden if your quantize algorithm needs two passes,
            such as an Octree quantizer.
            </remarks>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.QuantizePixel(Kooboo.Drawing.Quantizer.Color32)">
            <summary>
            Override this to process the pixel in the second pass of the algorithm
            </summary>
            <param name="pixel">The pixel to quantize</param>
            <returns>The quantized value</returns>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.GetPalette(System.Drawing.Imaging.ColorPalette)">
            <summary>
            Retrieve the palette for the quantized image
            </summary>
            <param name="original">Any old palette, this is overrwritten</param>
            <returns>The new color palette</returns>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer._octree">
            <summary>
            Stores the tree
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer._maxColors">
            <summary>
            Maximum allowed color depth
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.OctreeQuantizer.Octree">
            <summary>
            Class which does the actual quantization
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.#ctor(System.Int32)">
            <summary>
            Construct the octree
            </summary>
            <param name="maxColorBits">The maximum number of significant bits in the image</param>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.AddColor(Kooboo.Drawing.Quantizer.Color32)">
            <summary>
            Add a given color value to the octree
            </summary>
            <param name="pixel"></param>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.Reduce">
            <summary>
            Reduce the depth of the tree
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.TrackPrevious(Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode)">
            <summary>
            Keep track of the previous node that was quantized
            </summary>
            <param name="node">The node last quantized</param>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.Palletize(System.Int32)">
            <summary>
            Convert the nodes in the octree to a palette with a maximum of colorCount colors
            </summary>
            <param name="colorCount">The maximum number of colors</param>
            <returns>An arraylist with the palettized colors</returns>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.GetPaletteIndex(Kooboo.Drawing.Quantizer.Color32)">
            <summary>
            Get the palette index for the passed color
            </summary>
            <param name="pixel"></param>
            <returns></returns>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree.mask">
            <summary>
            Mask used when getting the appropriate pixels for a given node
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree._root">
            <summary>
            The root of the octree
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree._leafCount">
            <summary>
            Number of leaves in the tree
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree._reducibleNodes">
            <summary>
            Array of reducible nodes
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree._maxColorBits">
            <summary>
            Maximum number of significant bits in the image
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree._previousNode">
            <summary>
            Store the last node quantized
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree._previousColor">
            <summary>
            Cache the previous color quantized
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.OctreeQuantizer.Octree.Leaves">
            <summary>
            Get/Set the number of leaves in the tree
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.OctreeQuantizer.Octree.ReducibleNodes">
            <summary>
            Return the array of reducible nodes
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode">
            <summary>
            Class which encapsulates each node in the tree
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode.#ctor(System.Int32,System.Int32,Kooboo.Drawing.OctreeQuantizer.Octree)">
            <summary>
            Construct the node
            </summary>
            <param name="level">The level in the tree = 0 - 7</param>
            <param name="colorBits">The number of significant color bits in the image</param>
            <param name="octree">The tree to which this node belongs</param>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode.AddColor(Kooboo.Drawing.Quantizer.Color32,System.Int32,System.Int32,Kooboo.Drawing.OctreeQuantizer.Octree)">
            <summary>
            Add a color into the tree
            </summary>
            <param name="pixel">The color</param>
            <param name="colorBits">The number of significant color bits</param>
            <param name="level">The level in the tree</param>
            <param name="octree">The tree to which this node belongs</param>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode.Reduce">
            <summary>
            Reduce this node by removing all of its children
            </summary>
            <returns>The number of leaves removed</returns>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode.ConstructPalette(System.Collections.ArrayList,System.Int32@)">
            <summary>
            Traverse the tree, building up the color palette
            </summary>
            <param name="palette">The palette</param>
            <param name="paletteIndex">The current palette index</param>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode.GetPaletteIndex(Kooboo.Drawing.Quantizer.Color32,System.Int32)">
            <summary>
            Return the palette index for the passed color
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode.Increment(Kooboo.Drawing.Quantizer.Color32)">
            <summary>
            Increment the pixel count and add to the color information
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode._leaf">
            <summary>
            Flag indicating that this is a leaf node
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode._pixelCount">
            <summary>
            Number of pixels in this node
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode._red">
            <summary>
            Red component
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode._green">
            <summary>
            Green Component
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode._blue">
            <summary>
            Blue component
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode._children">
            <summary>
            Pointers to any child nodes
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode._nextReducible">
            <summary>
            Pointer to next reducible node
            </summary>
        </member>
        <member name="F:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode._paletteIndex">
            <summary>
            The index of this node in the palette
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode.NextReducible">
            <summary>
            Get/Set the next reducible node
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.OctreeQuantizer.Octree.OctreeNode.Children">
            <summary>
            Return the child nodes
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.ImageTools">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.ImageTools.IsImageExtension(System.String)">
            <summary>
            Determines whether [is image extension] [the specified extension].
            </summary>
            <param name="extension">The extension.</param>
            <returns>
              <c>true</c> if [is image extension] [the specified extension]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Drawing.ImageTools.ConvertToImageFormat(System.String)">
            <summary>
            Converts to image format.
            </summary>
            <param name="extension">The extension.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.ImageTools.ValidateImage(System.String)">
            <summary>
            Validates the image.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.ImageTools.ResizeImage(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Resizes the image.
            </summary>
            <param name="sourceFile">The source file.</param>
            <param name="targetFile">The target file.</param>
            <param name="maxWidth">Width of the max.</param>
            <param name="maxHeight">Height of the max.</param>
            <param name="preserverAspectRatio">if set to <c>true</c> [preserver aspect ratio].</param>
            <param name="quality">The quality.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.ImageTools.CropImage(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Crops the image.
            </summary>
            <param name="sourceFilePath">The source file path.</param>
            <param name="targetFilePath">The target file path.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.ImageTools.GetJpgCodec">
            <summary>
            Gets the JPG codec.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Drawing.ImageTools.GetAspectRatioSize(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the size of the aspect ratio.
            </summary>
            <param name="maxWidth">Width of the max.</param>
            <param name="maxHeight">Height of the max.</param>
            <param name="actualWidth">The actual width.</param>
            <param name="actualHeight">The actual height.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Drawing.WebPageCapture">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Drawing.WebPageCapture.CaptureInThread(System.String,System.EventHandler{Kooboo.Drawing.WebPageCapturedEventArgs},System.Web.HttpCookieCollection,System.Action{System.Exception})">
            <summary>
            Captures the in thread.
            </summary>
            <param name="url">The URL.</param>
            <param name="captured">The captured.</param>
            <param name="cookies">The cookies.</param>
            <param name="onError">The on error.</param>
        </member>
        <member name="P:Kooboo.Drawing.WebPageCapture.ProviderFactory">
            <summary>
            Gets or sets the provider factory.
            </summary>
            <value>
            The provider factory.
            </value>
        </member>
        <member name="P:Kooboo.Drawing.WebPageCapture.OnError">
            <summary>
            Gets or sets the on error.
            </summary>
            <value>
            The on error.
            </value>
        </member>
        <member name="T:Kooboo.Drawing.WebPageCaptureTask">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Drawing.WebPageCapturedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kooboo.Drawing.WebPageCapturedEventArgs.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>
            The image.
            </value>
        </member>
        <member name="T:Kooboo.Dynamic.DynamicDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Dynamic.DynamicDictionary"/> class.
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Dynamic.DynamicDictionary"/> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.GetDynamicMemberNames">
            <summary>
            Returns the enumeration of all dynamic member names.
            </summary>
            <returns>
            A sequence that contains dynamic member names.
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as getting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result" />.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Provides the implementation for operations that set member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as setting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member to which the value is being assigned. For example, for the statement sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="value">The value to set to the member. For example, for sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, the <paramref name="value" /> is "Test".</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.Add(System.String,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.TryGetValue(System.String,System.Object@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.DynamicDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Kooboo.Dynamic.DynamicDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Kooboo.Dynamic.DynamicDictionary.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="P:Kooboo.Dynamic.DynamicDictionary.Values">
            <summary>
            Gets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="P:Kooboo.Dynamic.DynamicDictionary.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Dynamic.DynamicDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Kooboo.Web.Mvc.NodeTypeNotSupportException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.CalculateExpression">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.CalculateExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Dynamic.Calculator.CalculateExpression"/> class.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.CalculateExpression.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Dynamic.Calculator.CalculateExpression"/> class.
            </summary>
            <param name="msg">The MSG.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Calculator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Calculator.Calculate(System.String)">
            <summary>
            Calculates the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Evaluate.Evaluator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Evaluate.Evaluator.#ctor(Kooboo.Dynamic.Calculator.Parser.Token)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Dynamic.Calculator.Evaluate.Evaluator"/> class.
            </summary>
            <param name="Tokens">The tokens.</param>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Evaluate.Evaluator.Evaluate(Kooboo.Dynamic.Calculator.Support.ExQueue{Kooboo.Dynamic.Calculator.Parser.TokenItem},System.String@,System.String@)">
            <summary>
            This new evaluate function includes support to assignment and short circuit of the IIF[] operand function
            </summary>
            <param name="RPNQueue"></param>
            <param name="sValue"></param>
            <param name="ErrorMsg"></param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Evaluate.Evaluator.Evaluate(System.String@,System.String@)">
            <summary>
            This new evaluate function includes support to assignment and short circuit of the IIF[] operand function
            </summary>
            <param name="sValue"></param>
            <param name="ErrorMsg"></param>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Evaluate.Evaluator.TokenEvalTime">
            <summary>
            Gets the token eval time.
            </summary>
            <value>
            The token eval time.
            </value>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.IIFShortCircuit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.IIFShortCircuit.Parent">
            <summary>
            This short circuit object will have a token item as the parent
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.IIFShortCircuit.RPNCondition">
            <summary>
            This is the RPN for the condition parameter of the iif[] Operand function
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.IIFShortCircuit.RPNTrue">
            <summary>
            This is the RPN for the "true" parameter of the iif[] Operand function
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.IIFShortCircuit.RPNFalse">
            <summary>
            This is the RPN for the "false" parameter of the iif[] Operand function
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.ParseState">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.IIFShortCircuitState">
            <summary>
            This enumeration represents the current state of the iif[] short circuit
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.Token">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Parser.Token.CreateTokenItem(System.String,System.Boolean,System.Boolean,Kooboo.Dynamic.Calculator.Parser.ParseState@,System.Boolean@,System.String@)">
            <summary>
            Creates TokenItem object and adds them to the collection
            </summary>
            <param name="CurrentToken"></param>
            <param name="WaitForCreation"></param>
            <param name="NextParseState"></param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Parser.Token.FoundAssignment">
            <summary>
            Check if we found the assignment token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Parser.Token.GetTokens_Old_1">
            <summary>
            This is called by the constructor.
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Parser.Token.GetTokens_old_2">
            <summary>
            This is called by the constructor.  This new version includes support for assignment :=
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Parser.Token.GetTokens">
            <summary>
            This is called by the constructor.  This new version includes support for assignment :=
            This new version also checks for iif[ operand functions embedded within other iif[ statements
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.Token.CharIndex">
            <summary>
            that index of the character that is being analyzed.  This also tells us the position of the error.
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.Token.LastEvaluationResult">
            <summary>
            this value gets populated by the evaluator object
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.Token.LastEvaluationTime">
            <summary>
            This property is populated by the evaluator
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.Token.TokenGroup">
            <summary>
            This token object may be part of a token group object.  This is a reference to the token group (if any)
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.Token.AnyAssignments">
            <summary>
            Indicates if the RuleSyntax has any assignments.
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.TokenGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Parser.TokenGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Dynamic.Calculator.Parser.TokenGroup"/> class.
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Parser.TokenGroup.UpdateVariables(Kooboo.Dynamic.Calculator.Parser.Token)">
            <summary>
            This method is called when we add a token to Group.Tokens.DeleteOnSubmit(tk).  This methods allows us to collect the 
            unique variables.
            </summary>
            <param name="tk"></param>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.TokenType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.TokenDataType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.TokenItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Parser.TokenItem.#ctor(System.String,Kooboo.Dynamic.Calculator.Parser.TokenType,System.Boolean)">
            <summary>
            Initialize the Token Item and set the name and token type
            </summary>
            <param name="TokenName"></param>
            <param name="TokenType"></param>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Parser.TokenItem.#ctor(System.String,Kooboo.Dynamic.Calculator.Parser.TokenType,Kooboo.Dynamic.Calculator.Parser.TokenDataType,System.Boolean)">
            <summary>
            Initialize the Token Item and set the name, type, and data type
            </summary>
            <param name="TokenName"></param>
            <param name="TokenType"></param>
            <param name="TokenDataType"></param>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.TokenItem.WillBeAssigned">
            <summary>
            Indicates if the variable will be assigned to in the rule
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.TokenItem.Parent">
            <summary>
            A tokenitem object parent is a tokenitems collection
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.TokenItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.TokenItems.Parent">
            <summary>
            The tokenitems collection object has a token as a parent
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.TokemItemsEnumerator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.Tokens">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.TokensEnumerator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.Variable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kooboo.Dynamic.Calculator.Parser.Variable.CollectionKey">
            <summary>
            This variables key in the collection
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.Variables">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Parser.VariablesEnumerator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Parser.VariablesEnumerator.#ctor(System.Collections.Generic.SortedList{System.String,Kooboo.Dynamic.Calculator.Parser.Variable})">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Dynamic.Calculator.Parser.VariablesEnumerator"/> class.
            </summary>
            <param name="Items">The items.</param>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Support.DataTypeCheck">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.IsAllDigits(System.String)">
            <summary>
            All digits....no decimals, commas, or -
            </summary>
            <param name="CheckString"></param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.DecimalCount(System.String)">
            <summary>
            The number of '.' in a string
            </summary>
            <param name="CheckString"></param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.IsText(System.String)">
            <summary>
            Text items are surronded by strings.
            </summary>
            <param name="CheckString"></param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.IsInteger(System.String)">
            <summary>
            integers have all digits and no decimals.  they can also start with -
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.IsDate(System.String)">
            <summary>
            Determines whether the specified check string is date.
            </summary>
            <param name="CheckString">The check string.</param>
            <returns>
              <c>true</c> if the specified check string is date; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.IsDouble(System.String)">
            <summary>
            Determines whether the specified check string is double.
            </summary>
            <param name="CheckString">The check string.</param>
            <returns>
              <c>true</c> if the specified check string is double; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.IsReservedWord(System.String)">
            <summary>
            Determines whether [is reserved word] [the specified operand text].
            </summary>
            <param name="OperandText">The operand text.</param>
            <returns>
              <c>true</c> if [is reserved word] [the specified operand text]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.AnyPuncuation(System.String,System.Char@)">
            <summary>
            Anies the puncuation.
            </summary>
            <param name="Text">The text.</param>
            <param name="PuncMark">The punc mark.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.IsOperandFunction(System.String)">
            <summary>
            Determines whether [is operand function] [the specified operand text].
            </summary>
            <param name="OperandText">The operand text.</param>
            <returns>
              <c>true</c> if [is operand function] [the specified operand text]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.IsOperator(System.String)">
            <summary>
            Determines whether the specified operator text is operator.
            </summary>
            <param name="OperatorText">The operator text.</param>
            <returns>
              <c>true</c> if the specified operator text is operator; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.IsBoolean(System.String)">
            <summary>
            Determines whether the specified check string is boolean.
            </summary>
            <param name="CheckString">The check string.</param>
            <returns>
              <c>true</c> if the specified check string is boolean; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.RemoveTextQuotes(System.String)">
            <summary>
            Removes the text quotes.
            </summary>
            <param name="CheckString">The check string.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.FunctionDescription(System.String,System.String@,System.String@,System.String@)">
            <summary>
            Functions the description.
            </summary>
            <param name="FunctionName">Name of the function.</param>
            <param name="Syntax">The syntax.</param>
            <param name="Description">The description.</param>
            <param name="Example">The example.</param>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.IsNULL(System.String)">
            <summary>
            Determines whether the specified check string is NULL.
            </summary>
            <param name="CheckString">The check string.</param>
            <returns>
              <c>true</c> if the specified check string is NULL; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.DataTypeCheck.ContainsOperator(System.String,System.String@,System.String@)">
            <summary>
            Determines whether the specified check string contains operator.
            </summary>
            <param name="CheckString">The check string.</param>
            <param name="sOperand">The s operand.</param>
            <param name="sOperator">The s operator.</param>
            <returns>
              <c>true</c> if the specified check string contains operator; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Support.ExQueue`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Support.ExQueueEnumerator`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Support.ExStack`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.ExStack`1.Reverse">
            <summary>
            Reverse the stack
            </summary>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.ExStack`1.Push(`0)">
            <summary>
            Push a single item on the stack
            </summary>
            <param name="Node"></param>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.ExStack`1.Push(`0[])">
            <summary>
            Push an array of items on the stack
            </summary>
            <param name="Nodes"></param>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.ExStack`1.Push(Kooboo.Dynamic.Calculator.Support.ExStack{`0})">
            <summary>
            Push the items from a stack onto a stack.  
            </summary>
            <param name="Stack"></param>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.ExStack`1.PopStack(System.Int32)">
            <summary>
            Pops the items from the stack and places them in their own stack
            </summary>
            <param name="PopCount"></param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.ExStack`1.Search(`0)">
            <summary>
            Search the stack and find a matching T.  
            </summary>
            <param name="Item">The item to search for</param>
            <returns>This method returns an integer that indicates the number of Pop()'s required
            to retrieve the found item.  If the item is not found, it returns 0</returns>
        </member>
        <member name="M:Kooboo.Dynamic.Calculator.Support.ExStack`1.RemoveItem(System.Int32)">
            <summary>
            InsertOnSubmit the item from the stack.  For example, to remove the "oldest" (or first item) use Stack.RemoveItem(0);
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:Kooboo.Dynamic.Calculator.Support.ExStackEnumerator`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Kooboo.Globalization.ElementCacheKeyEqualityComparer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.ElementCacheKeyEqualityComparer.Equals(System.Object,System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="x">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <param name="y">The y.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.Globalization.ElementCacheKeyEqualityComparer.GetHashCode(System.Object)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The obj.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Kooboo.Globalization.ElementCacheKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.ElementCacheKey.#ctor(Kooboo.Globalization.Element)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Globalization.ElementCacheKey"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Kooboo.Globalization.ElementCacheKey.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Globalization.ElementCacheKey"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Kooboo.Globalization.DirectoryCreateException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.DirectoryCreateException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Globalization.DirectoryCreateException"/> class.
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.DirectoryCreateException.#ctor(System.IO.IOException)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Globalization.DirectoryCreateException"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:Kooboo.Globalization.Element">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.Element.GetCultureInfo">
            <summary>
            Gets the culture info.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kooboo.Globalization.Element.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Kooboo.Globalization.Element.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Kooboo.Globalization.Element.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>
            The culture.
            </value>
        </member>
        <member name="P:Kooboo.Globalization.Element.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:Kooboo.Globalization.Element.Empty">
            <summary>
            Gets the empty.
            </summary>
            <value>
            The empty.
            </value>
        </member>
        <member name="T:Kooboo.Globalization.ElementCategory">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kooboo.Globalization.ElementCategory.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:Kooboo.Globalization.ElementCategory.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>
            The culture.
            </value>
        </member>
        <member name="T:Kooboo.Globalization.LocalizeExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.LocalizeExtension.Localize(System.String,System.Globalization.CultureInfo)">
            <summary>
            Localizes the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.LocalizeExtension.Localize(System.String,System.String)">
            <summary>
            Localizes the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="category">The category.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.LocalizeExtension.Localize(System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Localizes the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.LocalizeExtension.Map(System.String,System.String,System.String)">
            <summary>
            Maps the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="key">The key.</param>
            <param name="category">The category.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.LocalizeExtension.Map(System.String,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Maps the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="key">The key.</param>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.LocalizeExtension.Localize(Kooboo.Globalization.Element)">
            <summary>
            Localizes the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.LocalizeExtension.Position(System.String,System.String)">
            <summary>
            Positions the specified STR.
            </summary>
            <param name="str">The STR.</param>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Globalization.Repository.ResXResourceFileHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.Repository.ResXResourceFileHelper.Parse(System.String,System.String@,System.String@)">
            <summary>
            Parses the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="culture">The culture.</param>
            <param name="category">The category.</param>
        </member>
        <member name="M:Kooboo.Globalization.Repository.ResXResourceFileHelper.GetFileName(System.String,System.String)">
            <summary>
            Gets the name of the file.
            </summary>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Globalization.Repository.ResXResource">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.Repository.ResXResource.RemoveCategory(System.String,System.String)">
            <summary>
            Removes the category.
            </summary>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.ResXResource.AddCategory(System.String,System.String)">
            <summary>
            Adds the category.
            </summary>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
        </member>
        <member name="M:Kooboo.Globalization.Repository.ResXResource.GetCategories">
            <summary>
            Gets the categories.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.ResXResource.GetCultures">
            <summary>
            Gets the cultures.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.ResXResource.GetElements">
            <summary>
            Gets the elements.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.ResXResource.GetElement(System.String,System.String,System.String)">
            <summary>
            Gets the element.
            </summary>
            <param name="name">The name.</param>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.ResXResource.AddResource(Kooboo.Globalization.Element)">
            <summary>
            Adds the resource.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Kooboo.Globalization.Repository.ResXResource.UpdateResource(Kooboo.Globalization.Element)">
            <summary>
            Updates the resource.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.ResXResource.RemoveResource(Kooboo.Globalization.Element)">
            <summary>
            Removes the resource.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Globalization.Repository.XmlElementRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Globalization.Repository.XmlElementRepository"/> class.
            </summary>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Globalization.Repository.XmlElementRepository"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.EnabledLanguages">
            <summary>
            Enableds the languages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.Elements">
            <summary>
            Elementses this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.Get(System.String,System.String,System.String)">
            <summary>
            Gets the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.Add(Kooboo.Globalization.Element)">
            <summary>
            Adds the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.Update(Kooboo.Globalization.Element)">
            <summary>
            Updates the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.Remove(Kooboo.Globalization.Element)">
            <summary>
            Removes the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.RemoveCategory(System.String,System.String)">
            <summary>
            Removes the category.
            </summary>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.AddCategory(System.String,System.String)">
            <summary>
            Adds the category.
            </summary>
            <param name="category">The category.</param>
            <param name="culture">The culture.</param>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.Clear">
             <summary>
            
             </summary>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.Categories">
            <summary>
            Categorieses this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Globalization.Repository.XmlElementRepository.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Kooboo.CallContext.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Kooboo.CallContext"/> class from being created.
            </summary>
        </member>
        <member name="M:Kooboo.CallContext.Resolve``1">
            <summary>
            Resolves this instance.
            The object will be cached in the same call context.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Kooboo.CallContext.GenerateKey(System.String,System.Type)">
            <summary>
            Generates the key.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Kooboo.CallContext.Current">
            <summary>
            Gets the current.
            </summary>
            <value>
            The current.
            </value>
        </member>
        <member name="T:Kooboo.IO.IOUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.IO.IOUtility.ReadAsString(System.String)">
            <summary>
            Reads as string.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.IO.IOUtility.SaveStringToFile(System.String,System.String)">
            <summary>
            Saves to file.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="body">The body.</param>
        </member>
        <member name="M:Kooboo.IO.IOUtility.MimeType(System.String)">
            <summary>
            MIMEs the type.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.IO.IOUtility.RenameDirectory(System.String,System.String)">
            <summary>
            Renames the directory.
            </summary>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
        </member>
        <member name="M:Kooboo.IO.IOUtility.RenameFile(System.String,System.String)">
            <summary>
            Renames the file.
            </summary>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
        </member>
        <member name="M:Kooboo.IO.IOUtility.EnsureDirectoryExists(System.String)">
            <summary>
            Ensures the directory exists.
            </summary>
        </member>
        <member name="M:Kooboo.IO.IOUtility.DeleteDirectory(System.String,System.Boolean)">
            <summary>
            Deletes the directory.
            </summary>
            <param name="physicalPath">The physical path.</param>
            <param name="recursive">if set to <c>true</c> [recursive].</param>
        </member>
        <member name="M:Kooboo.IO.IOUtility.EnumerateDirectoriesExludeHidden(System.String)">
            <summary>
            Enumerates the directories exlude hidden.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.IO.IOUtility.EnumerateFilesExludeHidden(System.String)">
            <summary>
            Enumerates the files exlude hidden.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.IO.IOUtility.EnumerateFilesExludeHidden(System.String,System.String)">
            <summary>
            Enumerates the files exlude hidden.
            </summary>
            <param name="path">The path.</param>
            <param name="searchPattern">The search pattern.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.IO.IOUtility.Folders">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kooboo.IO.StreamExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.IO.StreamExtensions.ReadData(System.IO.Stream)">
            <summary>
            Reads the data.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.IO.StreamExtensions.ReadString(System.IO.Stream)">
            <summary>
            Reads the string.
            </summary>
            <param name="src">The SRC.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.IO.StreamExtensions.ReadString(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads the string.
            </summary>
            <param name="src">The SRC.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.IO.StreamExtensions.CopyTo(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies to.
            </summary>
            <param name="src">The SRC.</param>
            <param name="dest">The dest.</param>
        </member>
        <member name="M:Kooboo.IO.StreamExtensions.SaveAs(System.IO.Stream,System.String)">
            <summary>
            Saves as.
            </summary>
            <param name="stream">The stream.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Kooboo.IO.StreamExtensions.SaveAs(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Saves as.
            </summary>
            <param name="stream">The stream.</param>
            <param name="fileName">Name of the file.</param>
            <param name="isOverwrite">if set to <c>true</c> [is overwrite].</param>
        </member>
        <member name="M:Kooboo.IO.StreamExtensions.SaveAs(System.Byte[],System.String,System.Boolean)">
            <summary>
            Saves as.
            </summary>
            <param name="data">The data.</param>
            <param name="fileName">Name of the file.</param>
            <param name="isOverwrite">if set to <c>true</c> [is overwrite].</param>
            <returns>saved file absolute path</returns>
        </member>
        <member name="M:Kooboo.IO.StreamExtensions.WriteString(System.IO.Stream,System.String)">
            <summary>
            Writes the string.
            </summary>
            <param name="src">The SRC.</param>
            <param name="s">The s.</param>
        </member>
        <member name="M:Kooboo.IO.StreamExtensions.WriteString(System.IO.Stream,System.String,System.Text.Encoding)">
            <summary>
            Writes the string.
            </summary>
            <param name="src">The SRC.</param>
            <param name="s">The s.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="T:Kooboo.Null">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kooboo.Null.Int">
            <summary>
            Gets the int.
            </summary>
            <value>
            The int.
            </value>
        </member>
        <member name="T:Kooboo.Reflection.Members">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Reflection.Members.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Reflection.Members"/> class.
            </summary>
            <param name="o">The o.</param>
        </member>
        <member name="P:Kooboo.Reflection.Members.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="T:Kooboo.Reflection.ObjectExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Reflection.ObjectExtensions.Members(System.Object)">
            <summary>
            Memberses the specified o.
            </summary>
            <param name="o">The o.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Reflection.MemberException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Reflection.MemberException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Reflection.MemberException"/> class.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:Kooboo.Reflection.MemberException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Reflection.MemberException"/> class.
            </summary>
            <param name="msg">The MSG.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Kooboo.Reflection.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Reflection.Properties.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Reflection.Properties"/> class.
            </summary>
            <param name="o">The o.</param>
        </member>
        <member name="P:Kooboo.Reflection.Properties.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Kooboo.Reflection.Properties.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified name.
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Reflection.PropertyExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Reflection.PropertyExtensions.GetPropery(System.Object,System.String,System.Boolean)">
            <summary>
            Gets the propery value.
            </summary>
            <param name="source">The source.</param>
            <param name="propertyName">Name of the property. example: Property1.Property2</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Reflection.PropertyExtensions.SetPropery(System.Object,System.String,System.Object,System.Boolean)">
            <summary>
            Sets the propery.
            </summary>
            <param name="source">The source.</param>
            <param name="propertyName">Name of the property. example: Property1.Property2</param>
            <param name="value">The value.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
        </member>
        <member name="M:Kooboo.Reflection.PropertyExtensions.GetStrongTypePropery``2(``0,System.String,System.Boolean)">
            <summary>
            Gets the propery value.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="source">The source.</param>
            <param name="propertyName">Name of the property. example: Property1.Property2</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Reflection.PropertyExtensions.SetStrongTypePropery``2(``0,System.String,``1,System.Boolean)">
            <summary>
            Sets the propery.
            </summary>
            <param name="source">The source.</param>
            <param name="propertyName">Name of the property. example: Property1.Property2</param>
            <param name="value">The value.</param>
            <param name="throwException">if set to <c>true</c> [throw exception].</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Reflection.MemberNotFoundException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Reflection.MemberNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Reflection.MemberNotFoundException"/> class.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:Kooboo.Reflection.MemberNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Reflection.MemberNotFoundException"/> class.
            </summary>
            <param name="msg">The MSG.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:Kooboo.Reflection.MemberNotFoundException.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>
            The name of the property.
            </value>
        </member>
        <member name="P:Kooboo.Reflection.MemberNotFoundException.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:Kooboo.RegexPatterns">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.RegexPatterns.EmailAddress">
            <summary>
            See http://en.wikipedia.org/wiki/Email_address#Syntax
            </summary>
        </member>
        <member name="F:Kooboo.RegexPatterns.Domain">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.RegexPatterns.Alphanum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.RegexPatterns.Version">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.RegexPatterns.HttpUrl">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.RegexPatterns.SimpleName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.RegexPatterns.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.RegexPatterns.IP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.RegexPatterns.UserName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.RegexPatterns.VeriableName">
            <summary>
            The veriable name
            </summary>
        </member>
        <member name="T:Kooboo.StringExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.StringExtensions.Ellipsis(System.String,System.Int32,System.Int32)">
            <summary>
            Ellipsises the specified STR.
            </summary>
            <param name="str">The STR.</param>
            <param name="length">The length.</param>
            <param name="ellipsisLength">Length of the ellipsis.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.StringExtensions.EqualsOrNullEmpty(System.String,System.String,System.StringComparison)">
            <summary>
            Equalses the or null empty.
            </summary>
            <param name="str1">The STR1.</param>
            <param name="str2">The STR2.</param>
            <param name="comparisonType">Type of the comparison.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.StringExtensions.TrimOrNull(System.String)">
            <summary>
            Trims the or null.
            </summary>
            <param name="str">The STR.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.StringExtensions.MergeName(System.String)">
            <summary>
            Merges the name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.StringExtensions.SplitName(System.String,System.Boolean)">
            <summary>
            Splits the name.
            </summary>
            <param name="name">The name.</param>
            <param name="toLower">if set to <c>true</c> [to lower].</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.StringExtensions.As``1(System.String)">
            <summary>
            Ases the specified source.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.StringExtensions.As(System.String,System.Type)">
            <summary>
            Ases the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.StringExtensions.Items(System.String,System.Int32,System.String)">
            <summary>
            Itemses the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="itemIndex">Index of the item.</param>
            <param name="separator">The separator.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.StringExtensions.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            Determines whether [contains] [the specified original].
            </summary>
            <param name="original">The original.</param>
            <param name="value">The value.</param>
            <param name="comparisionType">Type of the comparision.</param>
            <returns>
              <c>true</c> if [contains] [the specified original]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.StringExtensions.StripHtmlXmlTags(System.String)">
            <summary>
            Strips the HTML XML tags.
            </summary>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.StringExtensions.StripAllTags(System.String)">
            <summary>
            Strips all tags.
            </summary>
            <param name="stringToStrip">The string to strip.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.StringExtensions.IsPlural(System.String)">
            <summary>
            Determines whether the specified word is plural.
            </summary>
            <param name="word">The word.</param>
            <returns>
              <c>true</c> if the specified word is plural; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.StringExtensions.IsSingular(System.String)">
            <summary>
            Determines whether the specified word is singular.
            </summary>
            <param name="word">The word.</param>
            <returns>
              <c>true</c> if the specified word is singular; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Kooboo.StringExtensions.Pluralize(System.String)">
            <summary>
            Pluralizes the specified word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.StringExtensions.Singularize(System.String)">
            <summary>
            Singularizes the specified word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.SR">
            <summary>
            To reader system resources
            </summary>
        </member>
        <member name="T:Kooboo.Text.FormattedTextWriter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Text.FormattedTextWriter.#ctor(System.IO.TextWriter,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Kooboo.Text.FormattedTextWriter"/> class.
            </summary>
            <param name="writer">The writer.</param>
            <param name="lineLength">Length of the line.</param>
            <param name="overflow">The overflow.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Kooboo.Text.FormattedTextWriter.Write(System.String)">
            <summary>
            Writes a string to the text string or stream.
            </summary>
            <param name="value">The string to write.</param>
        </member>
        <member name="M:Kooboo.Text.FormattedTextWriter.WriteLine">
            <summary>
            Writes a line terminator to the text string or stream.
            </summary>
        </member>
        <member name="M:Kooboo.Text.FormattedTextWriter.Flush">
            <summary>
            Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Kooboo.Text.FormattedTextWriter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.TextWriter" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Kooboo.Web.Mvc.Html.HtmlExtensions.ResolveUrl(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Normalizes a url in the form ~/path/to/resource.aspx.
            </summary>
            <param name="html"></param>
            <param name="relativeUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Html.HtmlExtensions.Script(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Renders a script tag referencing the javascript file. 
            </summary>
            <param name="html">The HTML.</param>
            <param name="scriptFile">The script file.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Html.HtmlExtensions.Stylesheet(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Renders a link tag referencing the stylesheet.  
            </summary>
            <param name="html">The HTML.</param>
            <param name="cssUrl">The CSS file.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Html.HtmlExtensions.Stylesheet(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Renders a link tag referencing the stylesheet.  
            </summary>
            <param name="html">The HTML.</param>
            <param name="cssUrl">The CSS file.</param>
            <param name="media">The media.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Routing.RouteTableRegister.GetInstanceOfRouteHandler(Kooboo.Web.Mvc.Routing.RouteConfigElement)">
            <summary>
            Gets the instance of route handler.
            </summary>
            <param name="route">The route.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Routing.RouteTableRegister.GetConstraints(Kooboo.Web.Mvc.Routing.RouteConfigElement)">
            <summary>
            Gets the constraints.
            </summary>
            <param name="route">The route.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Routing.RouteTableRegister.GetDefaults(Kooboo.Web.Mvc.Routing.RouteConfigElement)">
            <summary>
            Gets the defaults.
            </summary>
            <param name="route">The route.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Routing.RouteTableRegister.GetDataTokens(Kooboo.Web.Mvc.Routing.RouteConfigElement)">
            <summary>
            Gets the data tokens.
            </summary>
            <param name="route">The route.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Mvc.Routing.RouteTableRegister.GetRouteValueDictionary(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Gets the dictionary from attributes.
            </summary>
            <param name="attributes">The attributes.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Script.Serialization.JsonHelper.RegisterConverter(System.Web.Script.Serialization.JavaScriptConverter)">
            <summary>
            Registers the converter.
            </summary>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:Kooboo.Web.Script.Serialization.JsonHelper.ToJSON(System.Object)">
            <summary>
            To the JSON.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Script.Serialization.JsonHelper.Deserialize``1(System.String)">
            <summary>
            Deserializes from JSON.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json">The json.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Script.Serialization.JsonHelper.JsonStringToDateTime(System.String)">
            <summary>
            Jsons the string to date time.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Script.Serialization.JsonHelper.QuoteString(System.String)">
            <summary>
            Quotes the string.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Script.Serialization.JsonHelper.AppendCharAsUnicode(System.Text.StringBuilder,System.Char)">
            <summary>
            Appends the char as unicode.
            </summary>
            <param name="builder">The builder.</param>
            <param name="c">The c.</param>
        </member>
        <member name="M:Kooboo.Web.Script.Serialization.JsonHelper.QuoteString(System.String,System.Boolean)">
            <summary>
            Quotes the string.
            </summary>
            <param name="value">The value.</param>
            <param name="addQuotes">if set to <c>true</c> [add quotes].</param>
            <returns></returns>
        </member>
        <member name="T:Kooboo.Web.Url.UrlUtility">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kooboo.Web.Url.UrlUtility.invalidUrlCharacter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.ToUrlString(System.String)">
            <summary>
            To the URL string.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.Combine(System.String[])">
            <summary>
            
            </summary>
            <param name="virtualPaths">The virtual paths.<example>string[] {"path1","path2","path3"}</example></param>
            <returns> <value>path1/path2/path3</value> </returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.RawCombine(System.String[])">
            <summary>
            Combines the specified virtual paths without Escape.
            </summary>
            <param name="virtualPaths">The virtual paths.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.ToHttpAbsolute(System.String)">
            <summary>
            Return full url start with http.
            </summary>
            <param name="relativeUrl">Url start with "~"</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.ToHttpAbsolute(System.String,System.String)">
            <summary>
            Toes the HTTP absolute url.
            </summary>
            <param name="baseUri">The base URI. e.g: http://www.site.com</param>
            <param name="url">The URL. e.g: index?q=1</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.ResolveUrl(System.String)">
            <summary>
            Equal to <see cref="M:System.Web.Mvc.UrlHelper.Content(System.String)"/>  AND <see cref="M:System.Web.UI.Control.ResolveUrl(System.String)"/>
            <remarks>
            Independent of HttpContext
            </remarks>
            </summary>
            <param name="relativeUrl">The URL. <example>~/a/b</example> </param>
            <returns><value>/a/b OR {virtualPath}/a/b</value></returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.MapPath(System.String)">
            <summary>
            Wrap <see cref="M:System.Web.HttpServerUtilityBase.MapPath(System.String)"/>
            </summary>
            <param name="url">The URL.</param>
            <returns></returns>
            <remarks>
            Independent of HttpContext
            </remarks>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.CombineQueryString(System.String,System.String[])">
            <summary>
            Combines the query string.
            </summary>
            <param name="baseUrl">The base URL.</param>
            <param name="queries">The queries.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.RemoveQuery(System.String,System.String[])">
            <summary>
            Removes the query.
            </summary>
            <param name="url">The URL.</param>
            <param name="names">The names.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.ReplaceQuery(System.String,System.String,System.String)">
            <summary>
            Replaces the query.
            </summary>
            <param name="url">The URL.</param>
            <param name="name">The name.</param>
            <param name="newQuery">The new query.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.EnsureHttpHead(System.String)">
            <summary>
            Ensures the HTTP head.
            </summary>
            <param name="url">The URL.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.GetVirtualPath(System.String)">
            <summary>
            Gets the virtual path.
            </summary>
            <param name="physicalPath">The physical path.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.AddQueryParam(System.String,System.String,System.String)">
            <summary>
            Adds the query param.
            </summary>
            <param name="source">The source.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Kooboo.Web.Url.UrlUtility.IsAbsoluteUrl(System.String)">
            <summary>
            Determines whether [is absolute URL] [the specified URL].
            </summary>
            <param name="url">The URL.</param>
            <returns>
              <c>true</c> if [is absolute URL] [the specified URL]; otherwise, <c>false</c>.
            </returns>
        </member>
    </members>
</doc>
