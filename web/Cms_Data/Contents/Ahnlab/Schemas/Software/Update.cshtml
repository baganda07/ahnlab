
@using Kooboo.CMS.Content.Models;
@using Kooboo.CMS.Content.Query;
@{
    var schema = (Kooboo.CMS.Content.Models.Schema)ViewData["Schema"];
    var allowedEdit = (bool)ViewData["AllowedEdit"];
    var allowedView = (bool)ViewData["AllowedView"];
    var workflowItem  = Model._WorkflowItem_;
    var hasWorkflowItem = workflowItem!=null;
    var availableEdit = hasWorkflowItem || (!hasWorkflowItem && allowedEdit);
}
    @using(Html.BeginForm(ViewContext.RequestContext.AllRouteValues()["action"].ToString()
            , ViewContext.RequestContext.AllRouteValues()["controller"].ToString()
            , ViewContext.RequestContext.AllRouteValues()
            , FormMethod.Post, new RouteValueDictionary(new { enctype = "multipart/form-data" })))
{
    <table><tr>
            <th>
            <label for="Title">Title</label>
            </th>
            <td>
            <input class='long' id="Title" name="Title" type="text" value="@(Model.Title ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Title"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Category">Category</label>
            </th>
            <td>
            <input class='long' id="Category" name="Category" type="text" value="@(Model.Category ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Category"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="SubTitle">SubTitle</label>
            </th>
            <td>
            <input class='long' id="SubTitle" name="SubTitle" type="text" value="@(Model.SubTitle ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["SubTitle"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="OS">OS</label>
            </th>
            <td>
            <input class='long' id="OS" name="OS" type="text" value="@(Model.OS ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["OS"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Thumbnail">Thumbnail</label>
            </th>
            <td>
            <input id="Thumbnail" name="Thumbnail" type="file" data-value="@(Model.Thumbnail ?? "")" class='filestyle' />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Thumbnail"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Link">Link</label>
            </th>
            <td>
            <input class='long' id="Link" name="Link" type="text" value="@(Model.Link ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Link"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Order">Order</label>
            </th>
            <td>
            <input class='long' id="Order" name="Order" type="text" value="@(Model.Order ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Order"], null)
            
            </td>          
            </tr>
            @if (allowedEdit) {
                <tr>
            <th>
           
            </th>
            <td>
            <input id='Published' name="Published" type="checkbox" @(Convert.ToBoolean(Model.Published)?"checked":"") value="true"/>
                                    <input type="hidden" value="false" name="Published"/>
            <label class="inline" for="Published">Published</label>
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Published"], null)
            </td>          
            </tr>
            }
    @Html.Action("Categories", ViewContext.RequestContext.AllRouteValues())
    </table>   
}