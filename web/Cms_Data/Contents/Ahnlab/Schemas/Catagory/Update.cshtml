
@using Kooboo.CMS.Content.Models;
@using Kooboo.CMS.Content.Query;
@{
    var schema = (Kooboo.CMS.Content.Models.Schema)ViewData["Schema"];
    var allowedEdit = (bool)ViewData["AllowedEdit"];
    var allowedView = (bool)ViewData["AllowedView"];
    var workflowItem  = Model._WorkflowItem_;
    var hasWorkflowItem = workflowItem!=null;
    var availableEdit = hasWorkflowItem || (!hasWorkflowItem && allowedEdit);
}
    @using(Html.BeginForm(ViewContext.RequestContext.AllRouteValues()["action"].ToString()
            , ViewContext.RequestContext.AllRouteValues()["controller"].ToString()
            , ViewContext.RequestContext.AllRouteValues()
            , FormMethod.Post, new RouteValueDictionary(new { enctype = "application/x-www-form-urlencoded" })))
{
    <table><tr>
            <th>
            <label for="Name">Name</label>
            </th>
            <td>
            <input class='long' id="Name" name="Name" type="text" value="@(Model.Name ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Name"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Url">Url</label>
            </th>
            <td>
            <input class='long' id="Url" name="Url" type="text" value="@(Model.Url ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Url"], null)
            
            </td>          
            </tr><tr>
            <th>
           
            </th>
            <td>
            <input id='IsHot' name="IsHot" type="checkbox" @(Convert.ToBoolean(Model.IsHot)?"checked":"") value="true"/>
                                    <input type="hidden" value="false" name="IsHot"/>
            <label class="inline" for="IsHot">IsHot</label>
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["IsHot"], null)
            </td>          
            </tr><tr>
            <th>
            <label for="Order">Order</label>
            </th>
            <td>
            <input class="long" id="Order" name="Order" type="text" value="@(Model.Order ?? "")"  data-val-number="The field Order must be a number." data-val="true"/>            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Order"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="CssClass">CssClass</label>
            </th>
            <td>
            <input class='long' id="CssClass" name="CssClass" type="text" value="@(Model.CssClass ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["CssClass"], null)
            
            </td>          
            </tr><input class='long' id="HtmlAdv" name="HtmlAdv" type="hidden" value="@(Model.HtmlAdv ?? "")" />
            @if (allowedEdit) {
                <tr>
            <th>
           
            </th>
            <td>
            <input id='Published' name="Published" type="checkbox" @(Convert.ToBoolean(Model.Published)?"checked":"") value="true"/>
                                    <input type="hidden" value="false" name="Published"/>
            <label class="inline" for="Published">Published</label>
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Published"], null)
            </td>          
            </tr>
            }
    @Html.Action("Categories", ViewContext.RequestContext.AllRouteValues())
    </table>   
}