@functions
{
    protected class ProductFAQ
    {
        public TextContent Product { get; set; }
        public TextContent FAQ { get; set; }
    }

}
@{
    var c = Request["c"];
    var q = Request["q"];
    var pageIndexParam = Request["page"];
    int pageIndex = 1;
    int pageSize = 10;
    if (!int.TryParse(pageIndexParam, out pageIndex))
    {
        pageIndex = 1;
    }
    var categories = ContentHelper.TextFolder("Catalog").CreateQuery();
    if (!string.IsNullOrEmpty(c))
    {
        categories = categories.WhereEquals("UserKey", c);
    }
    var products = ContentHelper.TextFolder("Product").CreateQuery().WhereCategory(categories);
    var productfaqs = (from item in products
                       let faqs = item.Children("Support~ProductFAQ")
                       where faqs != null && faqs.Any()
                       from faq in faqs
                       select new ProductFAQ
                       {
                           Product = item,
                           FAQ = faq
                       }).ToList();

    if (!string.IsNullOrEmpty(q))
    {
        productfaqs = productfaqs.Where(f => f.FAQ["Title"].ToString().Contains(q) || f.FAQ["Content"].ToString().Contains(q)).ToList();
    }
    var pagedList = productfaqs.ToPagedList(pageIndex, pageSize);
}


<div class="faqSrch">
    <label for="wrtKeyword" class="msg">@("Enter a question".Label())</label>
    <div class="inputWrap">
        <form action="">
            <input type="text" name="q" id="searchText" class="txtBox" value="@Request["q"]" maxlength="50" onkeypress="javascript:if (event.keyCode == 13) { searchForm(1); return false; }" title="Enter a word or a sentence" placeholder="Enter a word or a sentence" style="width:548px;"/>
            <a href="javascript:;" id="btnSearchFAQ" class="btnSmDb ml6">@("Search".Label())</a>
        </form>
        <script type="text/javascript">
            $(document).ready(function() {
                $("#btnSearchFAQ").click(function() {
                    $(this).parent("form").submit();
                });
            });
        </script>
    </div>
</div>
<h3 class="cTit mt35">@("Category".Label())</h3>
<div class="faqType">
    <div class="tabList">
        <ul>
            <li class="on"><a href="@Url.FrontUrl().PageUrl("support/productfaq")">All</a></li>
            @if (ViewBag.Categories != null)
            {
                foreach (var item in ViewBag.Categories)
                {
                    <li><a href="@Url.FrontUrl().PageUrl("support/productfaq", new {c = item.UserKey})">@item.Name</a></li>
                }
            }
        </ul>
    </div>
</div>
<div class="tblInfo mt40">
    <p>@("Total".Label()) <strong class="fcBlue">@pagedList.TotalItemCount</strong></p>

</div>
<div class="bbsList">
    <table>
        <caption>@("Product FAQ List".Label())</caption>
        <colgroup>
            <col style="width:10%;" />
            <col style="width:16%;" />
            <col style="width:64%;" />
            <col style="width:10%;" />
        </colgroup>
        <thead>
            <tr>
                <th scope="col">@("No.".Label())</th>
                <th scope="col">@("Product".Label())</th>
                <th scope="col">@("Article".Label())</th>
                <th scope="col">@("Hit".Label())</th>
            </tr>
        </thead>
        <tbody>
            @{var i = 0;}
            @foreach (var item in pagedList)
            {
                <tr>
                    <td>@(pagedList.TotalItemCount - (pageIndex - 1) * pageSize - i)</td>
                    <td>@item.Product["Name"]</td>
                    <td class="al">
                        <a href="@Url.FrontUrl().PageUrl("support/productfaq/detail", new {userkey = item.FAQ.UserKey})">@item.FAQ["Title"]</a>
                    </td>
                    <td>@item.FAQ["Hit"]</td>
                </tr>
                i++;
            }
        </tbody>
    </table>
</div>
@{var pageOption = new PagerOptions
        {
            ShowFirstLast = false,
            ShowPrevNext = false,
            StatisticsTextFormatString = "",
            NumericPagerItemCount = 5,
            CssClass = "paging",
            CurrentPagerItemWrapperFormatString = "<span><a class='on'>{0}</a></span>",
            //NavigationPagerItemWrapperFormatString = "<span class=''>{0}</span>",
            PagerItemWrapperFormatString = "<span>{0}</span>",
            PageIndexParameterName = "page"
        };
} 
@Html.FrontHtml().Pager(pagedList, pageOption)